[{"path":"https://bhklab.github.io/AnnotationGx/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://bhklab.github.io/AnnotationGx/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://bhklab.github.io/AnnotationGx/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://bhklab.github.io/AnnotationGx/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://bhklab.github.io/AnnotationGx/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://bhklab.github.io/AnnotationGx/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://bhklab.github.io/AnnotationGx/articles/Cellosaurus.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Querying Cellosaurus","text":"Cellosaurus comprehensive knowledge resource dedicated cell lines, providing wealth information various types cells used biomedical research. serves centralized repository offers detailed data cell lines, including origins, characteristics, authentication methods, references, . Please view Cellosaurus website https://web.expasy.org/cellosaurus/ information detailed description can found https://www.cellosaurus.org/description.html. AnnotationGx package provides wrapper around Cellosaurus API map cell line identifiers Cellosaurus database fields.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/articles/Cellosaurus.html","id":"setup","dir":"Articles","previous_headings":"Introduction","what":"Setup","title":"Querying Cellosaurus","text":"","code":"library(AnnotationGx) library(data.table) BPPARAM = BiocParallel::MulticoreParam(progressbar=T)"},{"path":"https://bhklab.github.io/AnnotationGx/articles/Cellosaurus.html","id":"mapping-from-cell-line-name-to-accession-id","dir":"Articles","previous_headings":"Introduction","what":"Mapping from Cell Line name to Accession id","title":"Querying Cellosaurus","text":"main function provided package mapCell2Accession. function takes vector cell line identifiers returns data.table. Let’s see can use function map “HeLa” “A549” cell line names Cellosaurus database. default, function try map using common identifier (=\"id\") name return standard identifier id Cellosaurus accession ID ac. function also returns two additional columns query query:<> can used identify original query original identifier type needed. Another example using BT474 cell line.","code":"Usage and default values:      mapCell2Accession(        ids,        numResults = 1000,        from = \"id\",        to = c(\"id\", \"ac\"),        prioritizeParent = FALSE,        orderby = \"ac\",        query_only = FALSE,        raw = FALSE,        BPPARAM = BiocParallel::SerialParam(),        ...      ) (result <- mapCell2Accession(\"HeLa\", keep_duplicates = T, raw = T)) #> [19:58:43][INFO][AnnotationGx::mapCell2Accession]Creating Cellosaurus queries   #> [19:58:43][INFO][AnnotationGx::mapCell2Accession]Building Cellosaurus requests   #> [19:58:44][INFO][AnnotationGx::mapCell2Accession]Performing Cellosaurus queries   #> $HeLa #> <httr2_response> #> GET #> https://api.cellosaurus.org/search/cell-line?q=idsy%3AHeLa&sort=ac%20asc&fields=ac%2Cid%2Csy%2Cmisspelling%2Cdr%2Ccc&format=txt&rows=10000 #> Status: 200 OK #> Content-Type: text/plain #> Body: In memory (575649 bytes) result$HeLa -> resp  (result <- mapCell2Accession(\"HeLa\", keep_duplicates = T, raw = F)) #> [19:58:45][INFO][AnnotationGx::mapCell2Accession]Creating Cellosaurus queries   #> [19:58:45][INFO][AnnotationGx::mapCell2Accession]Building Cellosaurus requests   #> [19:58:45][INFO][AnnotationGx::mapCell2Accession]Performing Cellosaurus queries   #> [19:58:46][INFO][AnnotationGx::mapCell2Accession]Parsing Cellosaurus responses   #>    cellLineName accession  query #>          <char>    <char> <char> #> 1:         HeLa CVCL_0030   HeLa mapCell2Accession(\"A549\") #> [19:58:47][INFO][AnnotationGx::mapCell2Accession]Creating Cellosaurus queries   #> [19:58:47][INFO][AnnotationGx::mapCell2Accession]Building Cellosaurus requests   #> [19:58:47][INFO][AnnotationGx::mapCell2Accession]Performing Cellosaurus queries   #> [19:58:47][INFO][AnnotationGx::mapCell2Accession]Parsing Cellosaurus responses   #>    cellLineName accession  query #>          <char>    <char> <char> #> 1:        A-549 CVCL_0023   A549 # our query: mapCell2Accession(\"BT474\") #> [19:58:49][INFO][AnnotationGx::mapCell2Accession]Creating Cellosaurus queries   #> [19:58:49][INFO][AnnotationGx::mapCell2Accession]Building Cellosaurus requests   #> [19:58:49][INFO][AnnotationGx::mapCell2Accession]Performing Cellosaurus queries   #> [19:58:49][INFO][AnnotationGx::mapCell2Accession]Parsing Cellosaurus responses   #>    cellLineName accession  query #>          <char>    <char> <char> #> 1:       BT-474 CVCL_0179  BT474  mapCell2Accession(c(\"A549\", \"OOPS\", \"BT474\")) #> [19:58:49][INFO][AnnotationGx::mapCell2Accession]Creating Cellosaurus queries   #> [19:58:49][INFO][AnnotationGx::mapCell2Accession]Building Cellosaurus requests   #> [19:58:52][INFO][AnnotationGx::mapCell2Accession]Performing Cellosaurus queries   #> [19:58:53][INFO][AnnotationGx::mapCell2Accession]Parsing Cellosaurus responses   #>    cellLineName accession  query #>          <char>    <char> <char> #> 1:        A-549 CVCL_0023   A549 #> 2:         <NA>      <NA>   OOPS #> 3:       BT-474 CVCL_0179  BT474"},{"path":"https://bhklab.github.io/AnnotationGx/articles/ChEMBL.html","id":"introduction-to-chembl-api","dir":"Articles","previous_headings":"","what":"Introduction to ChEMBL API","title":"Querying ChEMBL Database","text":"WARNING: vignette work progress. questions like see features, please open issue bhklab/AnnotationGx ChEMBL database contains information bioactive drug-like small molecules. information includes 2-D structures, calculated properties; logP, Molecular Weight, Lipinski Parameters, abstracted bioactivities; binding constants ADMET data. data curated primary scientific literature. ChEMBL API allows data made available retrieval programmatic fashion. can use API query CHEMBL ID compound, retrieve molecule mechanisms action, query compound_record resource molecule resource ChEMBL database.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/articles/ChEMBL.html","id":"setup","dir":"Articles","previous_headings":"Introduction to ChEMBL API","what":"Setup","title":"Querying ChEMBL Database","text":"","code":"library(AnnotationGx)"},{"path":"https://bhklab.github.io/AnnotationGx/articles/ChEMBL.html","id":"chembl-mechanisms","dir":"Articles","previous_headings":"Introduction to ChEMBL API","what":"Retrieve molecule mechanisms of action from ChEMBL","title":"Querying ChEMBL Database","text":"Given ChEMBL ID, can retrieve molecule mechanisms action ChEMBL database using getChemblMechanism() function. NOTE: specialized function queries API mechanism resource . query resources, please see Custom Queries section. example, multiple mechanisms action returned.","code":"mechs <- getChemblMechanism(\"CHEMBL1413\") mechs #>        action_type binding_site_comment direct_interaction disease_efficacy #>             <char>               <lgcl>              <int>            <int> #> 1: CHELATING AGENT                   NA                  1                1 #> 2: CHELATING AGENT                   NA                  1                1 #>    max_phase mec_id #>        <int>  <int> #> 1:         4   2200 #> 2:         4   2224 #>                                                                                                                                                  mechanism_comment #>                                                                                                                                                             <char> #> 1: Trivalent metal cations chelating agent; inhibition of the metal-dependent enzymes that are responsible for the degradation of peroxides within the fungal cell #> 2: Trivalent metal cations chelating agent; inhibition of the metal-dependent enzymes that are responsible for the degradation of peroxides within the fungal cell #>          mechanism_of_action    mechanism_refs molecular_mechanism #>                       <char>            <list>               <int> #> 1:      Iron chelating agent <data.frame[3x3]>                   1 #> 2: Aluminium chelating agent <data.frame[3x3]>                   1 #>    molecule_chembl_id parent_molecule_chembl_id record_id selectivity_comment #>                <char>                    <char>     <int>              <lgcl> #> 1:         CHEMBL1413                CHEMBL1413   1343970                  NA #> 2:         CHEMBL1413                CHEMBL1413   1343970                  NA #>    site_id target_chembl_id variant_sequence #>     <lgcl>           <char>           <lgcl> #> 1:      NA    CHEMBL2363058               NA #> 2:      NA    CHEMBL2366381               NA"},{"path":"https://bhklab.github.io/AnnotationGx/articles/ChEMBL.html","id":"custom-queries","dir":"Articles","previous_headings":"Introduction to ChEMBL API","what":"Custom Queries","title":"Querying ChEMBL Database","text":"ChEMBL API allows wide range queries. specialized one function, open incorporating . Please open issue bhklab/AnnotationGx idea specialized function meets use case. query API follows following format: information can found API Documentation summary, requirements query : resource queried reource field queried filter_type used value used filter (optional) format returned data (default JSON) example, query example section : “https://www.ebi.ac.uk/chembl/api/data/mechanism?molecule_chembl_id__in=CHEMBL1413&format=json” : resource “mechanism” field “molecule_chembl_id” filter_type “” value “CHEMBL1413” format “json” parameters can used queryChemblAPI(resource, field, filter_type, value, format = \"json\") function query ChEMBL API. NOTE: unlike getChemblMechanism() function returns data.table, queryChemblAPI() function returns raw data unformatted getChemblResources() function returns list possible resources can queried: getChemblResourceFields(resource) function returns list possible fields can queried given resource: getChemblFilterTypes() function returns list possible filter types.","code":"https://www.ebi.ac.uk/chembl/api/data/[resource]?[field]__[filter_type]=[value]&format=[format] queryChemblAPI(\"mechanism\", \"molecule_chembl_id\", \"in\", \"CHEMBL1413\") #> $mechanisms #>       action_type binding_site_comment direct_interaction disease_efficacy #> 1 CHELATING AGENT                   NA                  1                1 #> 2 CHELATING AGENT                   NA                  1                1 #>   max_phase mec_id #> 1         4   2200 #> 2         4   2224 #>                                                                                                                                                 mechanism_comment #> 1 Trivalent metal cations chelating agent; inhibition of the metal-dependent enzymes that are responsible for the degradation of peroxides within the fungal cell #> 2 Trivalent metal cations chelating agent; inhibition of the metal-dependent enzymes that are responsible for the degradation of peroxides within the fungal cell #>         mechanism_of_action #> 1      Iron chelating agent #> 2 Aluminium chelating agent #>                                                                                                                                                                                                                                 mechanism_refs #> 1 20964457, 23416050, Ciclopirox#cite_note-pmid12760852-4, PubMed, PubMed, Wikipedia, http://europepmc.org/abstract/MED/20964457, http://europepmc.org/abstract/MED/23416050, http://en.wikipedia.org/wiki/Ciclopirox#cite_note-pmid12760852-4 #> 2 20964457, 23416050, Ciclopirox#cite_note-pmid12760852-4, PubMed, PubMed, Wikipedia, http://europepmc.org/abstract/MED/20964457, http://europepmc.org/abstract/MED/23416050, http://en.wikipedia.org/wiki/Ciclopirox#cite_note-pmid12760852-4 #>   molecular_mechanism molecule_chembl_id parent_molecule_chembl_id record_id #> 1                   1         CHEMBL1413                CHEMBL1413   1343970 #> 2                   1         CHEMBL1413                CHEMBL1413   1343970 #>   selectivity_comment site_id target_chembl_id variant_sequence #> 1                  NA      NA    CHEMBL2363058               NA #> 2                  NA      NA    CHEMBL2366381               NA #>  #> $page_meta #> $page_meta$limit #> [1] 20 #>  #> $page_meta$`next` #> NULL #>  #> $page_meta$offset #> [1] 0 #>  #> $page_meta$previous #> NULL #>  #> $page_meta$total_count #> [1] 2 getChemblResources()  #>  [1] \"activity\"                  \"assay\"                     #>  [3] \"atc_class\"                 \"binding_site\"              #>  [5] \"biotherapeutic\"            \"cell_line\"                 #>  [7] \"chembl_id_lookup\"          \"compound_record\"           #>  [9] \"compound_structural_alert\" \"document\"                  #> [11] \"document_similarity\"       \"document_term\"             #> [13] \"drug\"                      \"drug_indication\"           #> [15] \"drug_warning\"              \"go_slim\"                   #> [17] \"image\"                     \"mechanism\"                 #> [19] \"metabolism\"                \"molecule\"                  #> [21] \"molecule_form\"             \"organism\"                  #> [23] \"protein_classification\"    \"similarity\"                #> [25] \"source\"                    \"status\"                    #> [27] \"substructure\"              \"target\"                    #> [29] \"target_component\"          \"target_relation\"           #> [31] \"tissue\"                    \"xref_source\" getChemblResourceFields(\"mechanism\") #>  [1] \"action_type\"               \"binding_site_comment\"      #>  [3] \"direct_interaction\"        \"disease_efficacy\"          #>  [5] \"max_phase\"                 \"mec_id\"                    #>  [7] \"mechanism_comment\"         \"mechanism_of_action\"       #>  [9] \"mechanism_refs\"            \"molecular_mechanism\"       #> [11] \"molecule_chembl_id\"        \"parent_molecule_chembl_id\" #> [13] \"record_id\"                 \"selectivity_comment\"       #> [15] \"site_id\"                   \"target_chembl_id\"          #> [17] \"variant_sequence\" getChemblFilterTypes() #>  [1] \"exact\"       \"iexact\"      \"contains\"    \"icontains\"   \"startswith\"  #>  [6] \"istartswith\" \"endswith\"    \"iendswith\"   \"regex\"       \"iregex\"      #> [11] \"gt\"          \"gte\"         \"lt\"          \"lte\"         \"range\"       #> [16] \"in\"          \"isnull\"      \"search\"      \"only\""},{"path":[]},{"path":"https://bhklab.github.io/AnnotationGx/articles/Introduction.html","id":"install-annotationgx","dir":"Articles","previous_headings":"Basics","what":"Install AnnotationGx","title":"Introduction to AnnotationGx","text":"R open-source statistical environment can easily modified enhance functionality via packages. AnnotationGx R package available via Bioconductor repository packages. R can installed operating system CRAN can install AnnotationGx using following commands R session:","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE)) {       install.packages(\"BiocManager\")   }  BiocManager::install(\"AnnotationGx\")  ## Check that you have a valid Bioconductor installation BiocManager::valid()"},{"path":"https://bhklab.github.io/AnnotationGx/articles/Introduction.html","id":"citing-annotationgx","dir":"Articles","previous_headings":"Basics","what":"Citing AnnotationGx","title":"Introduction to AnnotationGx","text":"hope AnnotationGx useful research. Please use following information cite package overall approach. Thank !","code":"## Citation info citation(\"AnnotationGx\") #> To cite package 'AnnotationGx' in publications use: #>  #>   Joseph J, Eeles C, Haibe-Kains B (2024). _AnnotationGx: AnnotationGx: #>   A package for building, updating and querying an annotation database #>   for pharmaco-genomic data_. R package version 0.0.0.9088, #>   <https://bhklab.github.io/AnnotationGx/>. #>  #> A BibTeX entry for LaTeX users is #>  #>   @Manual{, #>     title = {AnnotationGx: AnnotationGx: A package for building, updating and querying an #> annotation database for pharmaco-genomic data}, #>     author = {Jermiah Joseph and Christopher Eeles and Benjamin Haibe-Kains}, #>     year = {2024}, #>     note = {R package version 0.0.0.9088}, #>     url = {https://bhklab.github.io/AnnotationGx/}, #>   }"},{"path":"https://bhklab.github.io/AnnotationGx/articles/Introduction.html","id":"quick-start-to-using-annotationgx","dir":"Articles","previous_headings":"","what":"Quick start to using AnnotationGx","title":"Introduction to AnnotationGx","text":"example can cite package inside vignette: AnnotationGx (Joseph, Eeles, Haibe-Kains, 2024)","code":"library(\"AnnotationGx\")"},{"path":"https://bhklab.github.io/AnnotationGx/articles/Introduction.html","id":"reproducibility","dir":"Articles","previous_headings":"","what":"Reproducibility","title":"Introduction to AnnotationGx","text":"AnnotationGx package (Joseph, Eeles, Haibe-Kains, 2024) made possible thanks : R (R Core Team, 2024) BiocStyle (Oleś, 2023) knitr (Xie, 2023) RefManageR (McLean, 2017) rmarkdown (Allaire, Xie, Dervieux, McPherson, Luraschi, Ushey, Atkins, Wickham, Cheng, Chang, Iannone, 2024) sessioninfo (Wickham, Chang, Flight, Müller, Hester, 2021) testthat (Wickham, 2011) package developed using biocthis.","code":"#> ─ Session info ─────────────────────────────────────────────────────────────────────────────────────────────────────── #>  setting  value #>  version  R version 4.3.3 (2024-02-29) #>  os       Ubuntu 22.04.4 LTS #>  system   x86_64, linux-gnu #>  ui       X11 #>  language en #>  collate  C.UTF-8 #>  ctype    C.UTF-8 #>  tz       UTC #>  date     2024-03-21 #>  pandoc   3.1.11 @ /opt/hostedtoolcache/pandoc/3.1.11/x64/ (via rmarkdown) #>  #> ─ Packages ─────────────────────────────────────────────────────────────────────────────────────────────────────────── #>  package      * version    date (UTC) lib source #>  AnnotationGx * 0.0.0.9088 2024-03-21 [1] local #>  backports      1.4.1      2021-12-13 [1] RSPM #>  bibtex         0.5.1      2023-01-26 [1] RSPM #>  BiocManager    1.30.22    2023-08-08 [1] RSPM #>  BiocParallel   1.36.0     2023-10-24 [1] Bioconductor #>  BiocStyle    * 2.30.0     2023-10-24 [1] Bioconductor #>  bookdown       0.38       2024-03-04 [1] RSPM #>  bslib          0.6.1      2023-11-28 [1] RSPM #>  cachem         1.0.8      2023-05-01 [1] RSPM #>  checkmate      2.3.1      2023-12-04 [1] RSPM #>  cli            3.6.2      2023-12-11 [1] RSPM #>  codetools      0.2-19     2023-02-01 [3] CRAN (R 4.3.3) #>  data.table     1.15.2     2024-02-29 [1] RSPM #>  desc           1.4.3      2023-12-10 [1] RSPM #>  digest         0.6.35     2024-03-11 [1] RSPM #>  evaluate       0.23       2023-11-01 [1] RSPM #>  fastmap        1.1.1      2023-02-24 [1] RSPM #>  fs             1.6.3      2023-07-20 [1] RSPM #>  generics       0.1.3      2022-07-05 [1] RSPM #>  glue           1.7.0      2024-01-09 [1] RSPM #>  htmltools      0.5.7      2023-11-03 [1] RSPM #>  httr           1.4.7      2023-08-15 [1] RSPM #>  jquerylib      0.1.4      2021-04-26 [1] RSPM #>  jsonlite       1.8.8      2023-12-04 [1] RSPM #>  knitr          1.45       2023-10-30 [1] RSPM #>  lifecycle      1.0.4      2023-11-07 [1] RSPM #>  lubridate      1.9.3      2023-09-27 [1] RSPM #>  magrittr       2.0.3      2022-03-30 [1] RSPM #>  memoise        2.0.1      2021-11-26 [1] RSPM #>  pkgdown        2.0.7      2022-12-14 [1] any (@2.0.7) #>  plyr           1.8.9      2023-10-02 [1] RSPM #>  purrr          1.0.2      2023-08-10 [1] RSPM #>  R6             2.5.1      2021-08-19 [1] RSPM #>  ragg           1.3.0      2024-03-13 [1] RSPM #>  Rcpp           1.0.12     2024-01-09 [1] RSPM #>  RefManageR   * 1.4.0      2022-09-30 [1] RSPM #>  rlang          1.1.3      2024-01-10 [1] RSPM #>  rmarkdown      2.26       2024-03-05 [1] RSPM #>  sass           0.4.9      2024-03-15 [1] RSPM #>  sessioninfo  * 1.2.2      2021-12-06 [1] any (@1.2.2) #>  stringi        1.8.3      2023-12-11 [1] RSPM #>  stringr        1.5.1      2023-11-14 [1] RSPM #>  systemfonts    1.0.6      2024-03-07 [1] RSPM #>  textshaping    0.3.7      2023-10-09 [1] RSPM #>  timechange     0.3.0      2024-01-18 [1] RSPM #>  vctrs          0.6.5      2023-12-01 [1] RSPM #>  xfun           0.42       2024-02-08 [1] RSPM #>  xml2           1.3.6      2023-12-04 [1] RSPM #>  yaml           2.3.8      2023-12-11 [1] RSPM #>  #>  [1] /home/runner/work/_temp/Library #>  [2] /opt/R/4.3.3/lib/R/site-library #>  [3] /opt/R/4.3.3/lib/R/library #>  #> ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────"},{"path":"https://bhklab.github.io/AnnotationGx/articles/Introduction.html","id":"bibliography","dir":"Articles","previous_headings":"","what":"Bibliography","title":"Introduction to AnnotationGx","text":"vignette generated using BiocStyle (Oleś, 2023) knitr (Xie, 2023) rmarkdown (Allaire, Xie, Dervieux et al., 2024) running behind scenes. Citations made RefManageR (McLean, 2017). [1] J. Allaire, Y. Xie, C. Dervieux, et al. rmarkdown: Dynamic Documents R. R package version 2.26. 2024. URL: https://github.com/rstudio/rmarkdown. [2] J. Joseph, C. Eeles, B. Haibe-Kains. AnnotationGx: AnnotationGx: package building, updating querying annotation database pharmaco-genomic data. R package version 0.0.0.9088. 2024. URL: https://bhklab.github.io/AnnotationGx/. [3] M. W. McLean. “RefManageR: Import Manage BibTeX BibLaTeX References R”. : Journal Open Source Software (2017). DOI: 10.21105/joss.00338. [4] . Oleś. BiocStyle: Standard styles vignettes Bioconductor documents. R package version 2.30.0. 2023. DOI: 10.18129/B9.bioc.BiocStyle. URL: https://bioconductor.org/packages/BiocStyle. [5] R Core Team. R: Language Environment Statistical Computing. R Foundation Statistical Computing. Vienna, Austria, 2024. URL: https://www.R-project.org/. [6] H. Wickham. “testthat: Get Started Testing”. : R Journal 3 (2011), pp. 5–10. URL: https://journal.r-project.org/archive/2011-1/RJournal_2011-1_Wickham.pdf. [7] H. Wickham, W. Chang, R. Flight, et al. sessioninfo: R Session Information. R package version 1.2.2, https://r-lib.github.io/sessioninfo/. 2021. URL: https://github.com/r-lib/sessioninfo#readme. [8] Y. Xie. knitr: General-Purpose Package Dynamic Report Generation R. R package version 1.45. 2023. URL: https://yihui.org/knitr/.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/articles/OncoTree.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Querying OncoTree","text":"OncoTree standardized classification system used cancer research clinical practice categorize different types cancer based tissue origin, molecular characteristics, relevant factors. Developed National Cancer Institute (NCI) within United States, OncoTree provides hierarchical framework organizes cancer types structured tree-like diagram. provides standardized classification system categorizing different types cancer based tissue origin, molecular characteristics, relevant factors. provides hierarchical framework organizes cancer types structured tree-like diagram. useful ensuring consistency cancer types classified reported across different studies clinical settings.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/articles/OncoTree.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Querying OncoTree","text":"","code":"library(AnnotationGx)"},{"path":"https://bhklab.github.io/AnnotationGx/articles/OncoTree.html","id":"querying-oncotree","dir":"Articles","previous_headings":"","what":"Querying OncoTree","title":"Querying OncoTree","text":"AnnotationGx provides set functions querying OncoTree retrieve three types information: - OncoTree release versions - Main Cancer types - Subtypes specific cancer type relationships","code":""},{"path":"https://bhklab.github.io/AnnotationGx/articles/OncoTree.html","id":"oncotree-release-versions","dir":"Articles","previous_headings":"Querying OncoTree","what":"OncoTree release versions","title":"Querying OncoTree","text":"getOncotreeVersions function retrieves available OncoTree release.","code":"getOncotreeVersions() #>                 api_identifier #>                         <char> #>  1:        oncotree_2017_11_01 #>  2:        oncotree_2020_10_01 #>  3:        oncotree_2020_02_06 #>  4:        oncotree_2019_12_01 #>  5:        oncotree_2018_07_01 #>  6:        oncotree_2017_06_21 #>  7:        oncotree_2018_08_01 #>  8:        oncotree_2017_10_05 #>  9:        oncotree_2019_08_01 #> 10:        oncotree_2018_09_01 #> 11:        oncotree_2018_06_01 #> 12:        oncotree_2018_03_01 #> 13:        oncotree_2018_04_01 #> 14:        oncotree_2018_05_01 #> 15:        oncotree_2018_02_01 #> 16:        oncotree_2019_05_01 #> 17:        oncotree_legacy_1.1 #> 18:        oncotree_2018_01_01 #> 19:        oncotree_2018_06_15 #> 20:        oncotree_2019_02_01 #> 21:        oncotree_2020_04_01 #> 22:        oncotree_2019_03_01 #> 23:        oncotree_2020_02_01 #> 24:        oncotree_2021_11_02 #> 25:       oncotree_development #> 26:     oncotree_latest_stable #> 27:        oncotree_2018_11_01 #> 28: oncotree_candidate_release #>                 api_identifier #>                                                                                                                                                                                                                                                                                                                                            description #>                                                                                                                                                                                                                                                                                                                                                 <char> #>  1:                                                                                                                                                                                                                                                                                                        Stable OncoTree released on date 2017-11-01 #>  2:                                                                                                                                                                                                                                                                                                        Stable OncoTree released on date 2020-10-01 #>  3:                                                                                                                                                                                                                                                                                                        Stable OncoTree released on date 2020-02-06 #>  4:                                                                                                                                                                                                                                                                                                        Stable OncoTree released on date 2019-12-01 #>  5:                                                                                                                                                                                                                                                                                                        Stable OncoTree released on date 2018-07-01 #>  6:                                                                                                                                                                                                                                                                                                        Stable OncoTree released on date 2017-06-21 #>  7:                                                                                                                                                                                                                                                                                                        Stable OncoTree released on date 2018-08-01 #>  8:                                                                                                                                                                                                                                                                                                        Stable OncoTree released on date 2017-10-05 #>  9:                                                                                                                                                                                                                                                                                                        Stable OncoTree released on date 2019-08-01 #> 10:                                                                                                                                                                                                                                                                                                        Stable OncoTree released on date 2018-09-01 #> 11:                                                                                                                                                                                                                                                                                                        Stable OncoTree released on date 2018-06-01 #> 12:                                                                                                                                                                                                                                                                                                        Stable OncoTree released on date 2018-03-01 #> 13:                                                                                                                                                                                                                                                                                                        Stable OncoTree released on date 2018-04-01 #> 14:                                                                                                                                                                                                                                                                                                        Stable OncoTree released on date 2018-05-01 #> 15:                                                                                                                                                                                                                                                                                                        Stable OncoTree released on date 2018-02-01 #> 16:                                                                                                                                                                                                                                                                                                        Stable OncoTree released on date 2019-05-01 #> 17:                                                                                                                                                                                                                  This is the closest match in TopBraid for the TumorTypes_txt file associated with release 1.1 of OncoTree (approved by committee) #> 18:                                                                                                                                                                                                                                                                                                        Stable OncoTree released on date 2018-01-01 #> 19:                                                                                                                                                                                                                                                                                                        Stable OncoTree released on date 2018-06-15 #> 20:                                                                                                                                                                                                                                                                                                        Stable OncoTree released on date 2019-02-01 #> 21:                                                                                                                                                                                                                                                                                                        Stable OncoTree released on date 2020-04-01 #> 22:                                                                                                                                                                                                                                                                                                        Stable OncoTree released on date 2019-03-01 #> 23:                                                                                                                                                                                                                                                                                                        Stable OncoTree released on date 2020-02-01 #> 24:                                                                                                                                                                                                                                                                                                        Stable OncoTree released on date 2021-11-02 #> 25:                                                                                                                                                                                                                                                      Latest OncoTree under development (subject to <b class=text-danger>change without notice<\/b>) #> 26:                                                                                                                                                                                                                                                                                                This is the latest approved version for public use. #> 27:                                                                                                                                                                                                                                                                                                        Stable OncoTree released on date 2018-11-01 #> 28: This version of the OncoTree reflects upcoming changes which have been approved for the next public release of oncotree. It also includes a small number of nodes which will not be included in the next public release (see the news page for more details). The next public release may possibly include additional oncotree nodes, if approved. #>                                                                                                                                                                                                                                                                                                                                            description #>     visible release_date #>      <lgcl>       <char> #>  1:   FALSE   2017-11-01 #>  2:   FALSE   2020-10-01 #>  3:   FALSE   2020-02-06 #>  4:   FALSE   2019-12-01 #>  5:   FALSE   2018-07-01 #>  6:   FALSE   2017-06-21 #>  7:   FALSE   2018-08-01 #>  8:   FALSE   2017-10-05 #>  9:   FALSE   2019-08-01 #> 10:   FALSE   2018-09-01 #> 11:   FALSE   2018-06-01 #> 12:   FALSE   2018-03-01 #> 13:   FALSE   2018-04-01 #> 14:   FALSE   2018-05-01 #> 15:   FALSE   2018-02-01 #> 16:   FALSE   2019-05-01 #> 17:   FALSE   2016-03-28 #> 18:   FALSE   2018-01-01 #> 19:   FALSE   2018-06-15 #> 20:   FALSE   2019-02-01 #> 21:   FALSE   2020-04-01 #> 22:   FALSE   2019-03-01 #> 23:   FALSE   2020-02-01 #> 24:   FALSE   2021-11-02 #> 25:    TRUE   2021-11-04 #> 26:    TRUE   2021-11-02 #> 27:   FALSE   2018-11-01 #> 28:    TRUE   2021-11-03 #>     visible release_date"},{"path":"https://bhklab.github.io/AnnotationGx/articles/OncoTree.html","id":"main-cancer-types","dir":"Articles","previous_headings":"Querying OncoTree","what":"Main Cancer types","title":"Querying OncoTree","text":"getMainCancerTypes function retrieves main cancer types OncoTree.","code":"getOncotreeMainTypes() #>                        mainType #>                          <char> #>   1:         Endometrial Cancer #>   2:               Melanocytoma #>   3:          Colorectal Cancer #>   4:  Peripheral Nervous System #>   5:            Uterine Sarcoma #>  ---                            #> 111:                     Glioma #> 112:       Biliary Tract Cancer #> 113:            Prostate Cancer #> 114:                Wilms Tumor #> 115: Renal Neuroendocrine Tumor"},{"path":"https://bhklab.github.io/AnnotationGx/articles/OncoTree.html","id":"subtypes-of-a-specific-cancer-type","dir":"Articles","previous_headings":"Querying OncoTree","what":"Subtypes of a specific cancer type","title":"Querying OncoTree","text":"getCancerSubtypes function retrieves subtypes specific cancer type.","code":"getOncotreeTumorTypes() #>        code       color                                             name #>      <char>      <char>                                           <char> #>   1:    MMB        Gray                               Medullomyoblastoma #>   2:    GCB   LimeGreen                      Germinal Center B-Cell Type #>   3:   SBLU   LimeGreen Splenic B-Cell Lymphoma/Leukemia, Unclassifiable #>   4:  OHNCA     DarkRed                   Head and Neck Carcinoma, Other #>   5:   PAOS       White                           Parosteal Osteosarcoma #>  ---                                                                     #> 881:    VSC      Purple      Squamous Cell Carcinoma of the Vulva/Vagina #> 882:   OOVC   LightBlue                            Ovarian Cancer, Other #> 883:    LCH LightSalmon                    Langerhans Cell Histiocytosis #> 884:   PSEC       Green                      Peritoneal Serous Carcinoma #> 885:     AM LightSalmon                              AML with Maturation #>                     mainType externalReferences tissue             children #>                       <char>             <list> <list>               <char> #>   1:         Embryonal Tumor           C0205833  C3706            CNS/Brain #>   2: Mature B-Cell Neoplasms                                       Lymphoid #>   3: Mature B-Cell Neoplasms                                       Lymphoid #>   4:    Head and Neck Cancer                                  Head and Neck #>   5:             Bone Cancer           C0206642  C8969                 Bone #>  ---                                                                        #> 881:          Vaginal Cancer           C0238518  C7736         Vulva/Vagina #> 882:          Ovarian Cancer                           Ovary/Fallopian Tube #> 883:           Histiocytosis           C0019621  C3107              Myeloid #> 884:  Peritoneal Cancer, NOS                                     Peritoneum #> 885:                Leukemia                                        Myeloid #>          parent history level revocations precursors #>          <char>  <list> <int>      <list>     <list> #>   1:       EMBT             3                        #>   2:   DLBCLNOS             6                        #>   3:        MBN             5                        #>   4:  HEAD_NECK             2                        #>   5:         OS             3                        #>  ---                                                 #> 881:      VULVA             2                        #> 882:      OVARY             2                        #> 883:       HDCN             4                        #> 884: PERITONEUM             2                        #> 885:     AMLNOS             5"},{"path":"https://bhklab.github.io/AnnotationGx/articles/PubChemAPI.html","id":"introduction-to-pubchem-apis","dir":"Articles","previous_headings":"","what":"Introduction to PubChem APIs","title":"Querying PubChem","text":"PubChem database chemical molecules biological activities. part National Center Biotechnology Information (NCBI), part National Institutes Health (NIH). PubChem provides set APIs query database. AnnotationGx package provides set functions query PubChem using APIs. first APIs PubChem PUG REST API designed - make specific queries based input identifier return data PubChem labelled computed internally [1]. - API useful querying information specific chemical compound getting standardized PubChem identifier (CID) given chemical name smiles string, getting chemical structure given CID. - provides access wide range data including chemical properties, bioassay data, chemical classification data, given specific identifier. second API PubChem PUG VIEW API designed : - give accesse aggregated annotations given chemical compound [3] mapped data, curated PubChem . - .e provides access annotations external sources UniProt, ChEBI, ChEMBL, given specific identifier.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/articles/PubChemAPI.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Querying PubChem","text":"","code":"library(AnnotationGx)"},{"path":"https://bhklab.github.io/AnnotationGx/articles/PubChemAPI.html","id":"mapping-from-chemical-name-to-pubchem-cid","dir":"Articles","previous_headings":"","what":"Mapping from chemical name to PubChem CID","title":"Querying PubChem","text":"main function provided package mapCompound2CID. can pass list compound names get CIDs . possible names multimap CIDs. case ‘Vincaleukoblastine’ query. cases multimapping, usually first entry highest similarity requested drug. subset first occurrence drug name: case compound can’t mapped, NA returned warning issued.","code":"mapCompound2CID(\"aspirin\") #>       name  cids #>     <char> <int> #> 1: aspirin  2244 drugs <- c(   \"Aspirin\", \"Erlotinib\", \"Acadesine\", \"Camptothecin\", \"Vincaleukoblastine\",   \"Cisplatin\" )  mapCompound2CID(drugs) #>                  name    cids #>                <char>   <int> #> 1:            Aspirin    2244 #> 2:          Erlotinib  176870 #> 3:          Acadesine   17513 #> 4:       Camptothecin   24360 #> 5: Vincaleukoblastine   13342 #> 6: Vincaleukoblastine  241903 #> 7: Vincaleukoblastine 3823887 #> 8:          Cisplatin 5702198 mapCompound2CID(drugs, first = TRUE) #>                  name    cids #>                <char>   <int> #> 1:            Aspirin    2244 #> 2:          Erlotinib  176870 #> 3:          Acadesine   17513 #> 4:       Camptothecin   24360 #> 5: Vincaleukoblastine   13342 #> 6:          Cisplatin 5702198 (result <- mapCompound2CID(c(drugs, \"non existent compound\", \"another bad compound\"), first = TRUE)) #> [19:59:08][WARNING][AnnotationGx::getPubchemCompound] Some queries failed. See the 'failed' object for details.   #>                     name    cids #>                   <char>   <int> #> 1:               Aspirin    2244 #> 2:             Erlotinib  176870 #> 3:             Acadesine   17513 #> 4:          Camptothecin   24360 #> 5:    Vincaleukoblastine   13342 #> 6:             Cisplatin 5702198 #> 7: non existent compound      NA #> 8:  another bad compound      NA  failed <- attributes(result)$failed  # get the list of failed inputs names(failed) #> [1] \"non existent compound\" \"another bad compound\"  # get the error message for the failed input print(failed[1]) #> $`non existent compound` #> $`non existent compound`$Code #> [1] \"PUGREST.NotFound\" #>  #> $`non existent compound`$Message #> [1] \"No CID found\" #>  #> $`non existent compound`$Details #> [1] \"No CID found that matches the given name\""},{"path":"https://bhklab.github.io/AnnotationGx/articles/PubChemAPI.html","id":"mapping-from-pubchem-cid-to-properties","dir":"Articles","previous_headings":"","what":"Mapping from PubChem CID to Properties","title":"Querying PubChem","text":"CIDs obtained, can used query properties compound. view available properties Pubchem, use getPubchemProperties function. deciding properties query, can use mapCID2Properties function get properties specific CID.","code":"getPubchemProperties() #>                         name         type #>                       <char>       <char> #>  1:                      CID          int #>  2:         MolecularFormula       string #>  3:          MolecularWeight       string #>  4:          CanonicalSMILES       string #>  5:           IsomericSMILES       string #>  6:                    InChI       string #>  7:                 InChIKey       string #>  8:                IUPACName       string #>  9:                    XLogP       double #> 10:                ExactMass       string #> 11:         MonoisotopicMass       string #> 12:                     TPSA       double #> 13:               Complexity          int #> 14:                   Charge          int #> 15:          HBondDonorCount          int #> 16:       HBondAcceptorCount          int #> 17:       RotatableBondCount          int #> 18:           HeavyAtomCount          int #> 19:         IsotopeAtomCount          int #> 20:          AtomStereoCount          int #> 21:   DefinedAtomStereoCount          int #> 22: UndefinedAtomStereoCount          int #> 23:          BondStereoCount          int #> 24:   DefinedBondStereoCount          int #> 25: UndefinedBondStereoCount          int #> 26:        CovalentUnitCount          int #> 27:                 Volume3D       double #> 28:      XStericQuadrupole3D       double #> 29:      YStericQuadrupole3D       double #> 30:      ZStericQuadrupole3D       double #> 31:           FeatureCount3D          int #> 32:   FeatureAcceptorCount3D          int #> 33:      FeatureDonorCount3D          int #> 34:      FeatureAnionCount3D          int #> 35:     FeatureCationCount3D          int #> 36:       FeatureRingCount3D          int #> 37: FeatureHydrophobeCount3D          int #> 38:     ConformerModelRMSD3D       double #> 39:    EffectiveRotorCount3D       double #> 40:         ConformerCount3D          int #> 41:            Fingerprint2D base64Binary #> 42:                    Title       string #> 43:              PatentCount          int #> 44:        PatentFamilyCount          int #> 45:          LiteratureCount          int #>                         name         type properties <- c(\"Title\", \"MolecularFormula\", \"InChIKey\", \"MolecularWeight\")  # Need to remove NA values from the query as they will cause an error result[!is.na(cids), mapCID2Properties(ids = cids, properties = properties)] #>        CID MolecularFormula MolecularWeight                    InChIKey #>      <int>           <char>          <char>                      <char> #> 1:    2244           C9H8O4          180.16 BSYNRYMUTXBXSQ-UHFFFAOYSA-N #> 2:  176870       C22H23N3O4           393.4 AAKJLRGGTJKAMG-UHFFFAOYSA-N #> 3:   17513        C9H14N4O5          258.23 RTRQQBHATOEIAF-UUOKFMHZSA-N #> 4:   24360       C20H16N2O4           348.4 VSJKWCGYPAHWDS-FQEVSTJZSA-N #> 5:   13342       C46H58N4O9           811.0 JXLYSJRDGCGARV-CFWMRBGOSA-N #> 6: 5702198        Cl2H6N2Pt          300.05 LXZZYRPGZAFOLE-UHFFFAOYSA-L #>                     Title #>                    <char> #> 1:                Aspirin #> 2:              Erlotinib #> 3:              Acadesine #> 4:           Camptothecin #> 5:            Vinblastine #> 6: azane;dichloroplatinum"},{"path":"https://bhklab.github.io/AnnotationGx/articles/PubChemAPI.html","id":"mapping-from-pubchem-cid-to-annotations","dir":"Articles","previous_headings":"","what":"Mapping from PubChem CID to Annotations","title":"Querying PubChem","text":"Pubchem’s VIEW API provides access annotations external sources UniProt, ChEBI, ChEMBL, given specific identifier. querying annotations, need use exact heading want query. can use getPubchemAnnotationHeadings function get available annotation headings types.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/articles/PubChemAPI.html","id":"get-all-available-annotation-headings","dir":"Articles","previous_headings":"Mapping from PubChem CID to Annotations","what":"Get ALL available annotation headings:","title":"Querying PubChem","text":"","code":"getPubchemAnnotationHeadings() #>               Heading     Type #>                <char>   <char> #>   1:  11B NMR Spectra Compound #>   2:  13C NMR Spectra Compound #>   3:  15N NMR Spectra Compound #>   4:  17O NMR Spectra Compound #>   5:  19F NMR Spectra Compound #>  ---                           #> 636: Wiley References Compound #> 637:      WormBase ID     Gene #> 638:      WormBase ID  Protein #> 639:  Xenbase Gene ID     Gene #> 640:          ZFIN ID     Gene"},{"path":"https://bhklab.github.io/AnnotationGx/articles/PubChemAPI.html","id":"get-annotation-headings-for-a-specific-type","dir":"Articles","previous_headings":"Mapping from PubChem CID to Annotations","what":"Get annotation headings for a specific type:","title":"Querying PubChem","text":"","code":"getPubchemAnnotationHeadings(type = \"Compound\") #>                                        Heading     Type #>                                         <char>   <char> #>   1:                           11B NMR Spectra Compound #>   2:                           13C NMR Spectra Compound #>   3:                           15N NMR Spectra Compound #>   4:                           17O NMR Spectra Compound #>   5:                           19F NMR Spectra Compound #>  ---                                                    #> 475: Volatilization from Water/Soil (Complete) Compound #> 476:                   WHO Essential Medicines Compound #> 477:                                  Wikidata Compound #> 478:                                 Wikipedia Compound #> 479:                          Wiley References Compound"},{"path":"https://bhklab.github.io/AnnotationGx/articles/PubChemAPI.html","id":"get-annotation-headings-for-a-specific-heading","dir":"Articles","previous_headings":"Mapping from PubChem CID to Annotations","what":"Get annotation headings for a specific heading:","title":"Querying PubChem","text":"","code":"getPubchemAnnotationHeadings(heading = \"ChEMBL ID\") #>      Heading     Type #>       <char>   <char> #> 1: ChEMBL ID Compound"},{"path":"https://bhklab.github.io/AnnotationGx/articles/PubChemAPI.html","id":"get-annotation-headings-for-a-specific-type-and-heading","dir":"Articles","previous_headings":"Mapping from PubChem CID to Annotations","what":"Get annotation headings for a specific type and heading:","title":"Querying PubChem","text":"","code":"getPubchemAnnotationHeadings(type = \"Compound\", heading = \"CAS\") #>           Heading     Type #>            <char>   <char> #> 1:            CAS Compound #> 2: Deprecated CAS Compound #> 3:    Related CAS Compound"},{"path":"https://bhklab.github.io/AnnotationGx/articles/PubChemAPI.html","id":"query-annotations-for-a-specific-cid-and-heading","dir":"Articles","previous_headings":"Mapping from PubChem CID to Annotations","what":"Query annotations for a specific CID and heading","title":"Querying PubChem","text":"can use heading query annotations specific CID.","code":"result[!is.na(cids), CAS := annotatePubchemCompound(cids, \"CAS\")] result #>                     name    cids         CAS #>                   <char>   <int>      <char> #> 1:               Aspirin    2244     50-78-2 #> 2:             Erlotinib  176870 183321-74-6 #> 3:             Acadesine   17513   2627-69-2 #> 4:          Camptothecin   24360   7689-03-4 #> 5:    Vincaleukoblastine   13342    865-21-4 #> 6:             Cisplatin 5702198        <NA> #> 7: non existent compound      NA        <NA> #> 8:  another bad compound      NA        <NA>"},{"path":"https://bhklab.github.io/AnnotationGx/articles/PubChemAPI.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Querying PubChem","text":"PUG REST. PubChem Docs [website]. Retrieved https://pubchemdocs.ncbi.nlm.nih.gov/pug-rest. Kim S, Thiessen PA, Cheng T, Yu B, Bolton EE. update PUG-REST: RESTful interface programmatic access PubChem. Nucleic Acids Res. 2018 July 2; 46(W1):W563-570. doi:10.1093/nar/gky294. PUG VIEW. PubChem Docs [webiste]. Retrieved https://pubchemdocs.ncbi.nlm.nih.gov/pug-view. Kim S, Thiessen PA, Cheng T, Zhang J, Gindulyte , Bolton EE. PUG-View: programmatic access chemical annotations integrated PubChem. J Cheminform. 2019 Aug 9; 11:56. doi:10.1186/s13321-019-0375-2.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/articles/Unichem.html","id":"introduction-to-the-unichem-api","dir":"Articles","previous_headings":"","what":"Introduction to the Unichem API","title":"Querying Unichem Database","text":"UniChem database provides publicly available REST API programmatic retrieval mappings standardized structural compound identifiers unique compound IDs across range large online cheminformatic databases PubChem, ChEMBL, DrugBank many . service accepts POST requests two different end-points: /compound /connectivity. endpoints accept query parameters via POST body JSON format. /compound API returns exact matches queried compound, /connectivity API uses layers International Chemical Identifier (InChI) query compound return exact matches well structurally related compounds isomers, salts, ionizations . [@UniChemBeta; @chambersUniChemUnifiedChemical2013] functions AnnotationGx designed allow package users easily query UniChem resources without pre-existing knowledge HTTP requests API specifications. hope provide R native interface mapping various cheminformatic databases, accessible anyone familar using R functions!","code":"library(AnnotationGx)"},{"path":"https://bhklab.github.io/AnnotationGx/articles/Unichem.html","id":"available-databases","dir":"Articles","previous_headings":"","what":"Available Databases","title":"Querying Unichem Database","text":"see table database identifiers available via UniChem, can call getUniChemSources function. default, just database shortname (“Name”) UniChem’s ID (“SourceID”) columns returned. return columns, pass all_columns = TRUE argument mapping using queryUnichemCompound function, sources can used , databases compound mappings returned.","code":"getUnichemSources() #>                 Name SourceID #>               <char>    <int> #>  1:           chembl        1 #>  2:         drugbank        2 #>  3:              pdb        3 #>  4:           gtopdb        4 #>  5:     pubchem_dotf        5 #>  6:      kegg_ligand        6 #>  7:            chebi        7 #>  8:          nih_ncc        8 #>  9:             zinc        9 #> 10:       emolecules       10 #> 11:            atlas       12 #> 12:           fdasrs       14 #> 13:       surechembl       15 #> 14:         pharmgkb       17 #> 15:             hmdb       18 #> 16:          selleck       20 #> 17:  pubchem_tpharma       21 #> 18:          pubchem       22 #> 19:            mcule       23 #> 20:      nmrshiftdb2       24 #> 21:            lincs       25 #> 22:            actor       26 #> 23:            recon       27 #> 24:          molport       28 #> 25:          nikkaji       29 #> 26:        bindingdb       31 #> 27:          comptox       32 #> 28:        lipidmaps       33 #> 29:      drugcentral       34 #> 30:     carotenoiddb       35 #> 31:     metabolights       36 #> 32:           brenda       37 #> 33:             rhea       38 #> 34:     chemicalbook       39 #> 35:      swisslipids       41 #> 36:         dailymed       45 #> 37:   clinicaltrials       46 #> 38:           rxnorm       47 #> 39:   MedChemExpress       48 #> 40: probes_and_drugs       49 #>                 Name SourceID"},{"path":"https://bhklab.github.io/AnnotationGx/articles/Unichem.html","id":"querying-unichem-compound-api","dir":"Articles","previous_headings":"","what":"Querying UniChem Compound API","title":"Querying Unichem Database","text":"queryUnichemCompound function allows query UniChem Compound API retrieve mappings given compound identifier. function takes two mandatory arguments. first compound argument compound identifier queried. second type argument type compound identifier search . Options “uci”, “inchi”, “inchikey”, “sourceID”. sourceID argument optional required type argument “sourceID”. function returns list : “compoundID” character compound identifier “Name” character name database “NameLong” character long name database “SourceID” character UniChem Source ID “sourceURL” character URL source “UCI” character UniChem Identifier “InchiKey” character InChIKey “Inchi” character InChI “formula” character molecular formula “connections” character connection representation “1-6(10)13-8-5-3-2-4-7(8)9(11)12” “hAtoms” character hydrogen atom connections “2-5H,1H3,(H,11,12)”","code":""},{"path":"https://bhklab.github.io/AnnotationGx/articles/Unichem.html","id":"example-searching-using-uci-unichem-identifier","dir":"Articles","previous_headings":"Querying UniChem Compound API","what":"Example Searching using uci (UniChem Identifier)","title":"Querying Unichem Database","text":"Note: type query requires know UniChem Identifier compound.","code":"queryUnichemCompound(compound = \"161671\", type = \"uci\") #> $External_Mappings #>                       compoundID             Name #>                           <char>           <char> #>  1:                     CHEMBL25           chembl #>  2:                      DB00945         drugbank #>  3:                          AIN              pdb #>  4:                         4139           gtopdb #>  5:                     24714725     pubchem_dotf #>  6:                       C01405      kegg_ligand #>  7:                        15365            chebi #>  8:             ZINC000000000053             zinc #>  9:                       474821       emolecules #> 10:         acetylsalicylic acid            atlas #> 11:                      aspirin            atlas #> 12:                   R16CO5Y76E           fdasrs #> 13:                  SCHEMBL1353       surechembl #> 14:                     PA448497         pharmgkb #> 15:                  HMDB0001879             hmdb #> 16: aspirin-acetylsalicylic-acid          selleck #> 17:                     15195166  pubchem_tpharma #> 18:                         2244          pubchem #> 19:             MCULE-3199019536            mcule #> 20:                     20038075      nmrshiftdb2 #> 21:                     LSM-5288            lincs #> 22:                      50-78-2            actor #> 23:                   11126-35-5            actor #> 24:                      J2.300K          nikkaji #> 25:                        22360        bindingdb #> 26:                DTXSID5020108          comptox #> 27:                           74      drugcentral #> 28:                         4779           brenda #> 29:                         3100           brenda #> 30:                       159662           brenda #> 31:                         2261           brenda #> 32:                         6476           brenda #> 33:                        32748           brenda #> 34:                    CB4421683     chemicalbook #> 35:                    CB5114818     chemicalbook #> 36:                      ASPIRIN         dailymed #> 37:         ACETYLSALICYLIC ACID   clinicaltrials #> 38:                      DURLAZA   clinicaltrials #> 39:                      ASPIRIN   clinicaltrials #> 40:            ASPIRIN DL-LYSINE   clinicaltrials #> 41:                    VENOPIRIN   clinicaltrials #> 42:                     MEASURIN   clinicaltrials #> 43:                   BAY1019036   clinicaltrials #> 44:      LYSINE ACETYLSALICYLATE   clinicaltrials #> 45:                      ECOTRIN           rxnorm #> 46:                      ASPIRIN           rxnorm #> 47:            ACETYL SALICYLATE           rxnorm #> 48:                      DURLAZA           rxnorm #> 49:                     HY-14654   MedChemExpress #> 50:                     PD002467 probes_and_drugs #>                       compoundID             Name #>                                                    NameLong sourceID #>                                                      <char>    <int> #>  1:                                                  ChEMBL        1 #>  2:                                                DrugBank        2 #>  3:                         PDBe (Protein Data Bank Europe)        3 #>  4:                                   Guide to Pharmacology        4 #>  5:                  PubChem ('Drugs of the Future' subset)        5 #>  6:   KEGG (Kyoto Encyclopedia of Genes and Genomes) Ligand        6 #>  7:       ChEBI (Chemical Entities of Biological Interest).        7 #>  8:                                                    ZINC        9 #>  9:                                              eMolecules       10 #> 10:                                   Gene Expression Atlas       12 #> 11:                                   Gene Expression Atlas       12 #> 12:             FDA/USP Substance Registration System (SRS)       14 #> 13:                                              SureChEMBL       15 #> 14:                                                PharmGKB       17 #> 15:                        Human Metabolome Database (HMDB)       18 #> 16:                                                 Selleck       20 #> 17:                       PubChem ('Thomson Pharma' subset)       21 #> 18:                                       PubChem Compounds       22 #> 19:                                                   Mcule       23 #> 20:                                              NMRShiftDB       24 #> 21: Library of Integrated Network-based Cellular Signatures       25 #> 22:                                                   ACToR       26 #> 23:                                                   ACToR       26 #> 24:                                                 Nikkaji       29 #> 25:                                               BindingDB       31 #> 26: EPA (Environmental Protection Agency) CompTox Dashboard       32 #> 27:                                             DrugCentral       34 #> 28:                                                  Brenda       37 #> 29:                                                  Brenda       37 #> 30:                                                  Brenda       37 #> 31:                                                  Brenda       37 #> 32:                                                  Brenda       37 #> 33:                                                  Brenda       37 #> 34:                                            ChemicalBook       39 #> 35:                                            ChemicalBook       39 #> 36:                                                DailyMed       45 #> 37:                                          clinicaltrials       46 #> 38:                                          clinicaltrials       46 #> 39:                                          clinicaltrials       46 #> 40:                                          clinicaltrials       46 #> 41:                                          clinicaltrials       46 #> 42:                                          clinicaltrials       46 #> 43:                                          clinicaltrials       46 #> 44:                                          clinicaltrials       46 #> 45:                                                  rxnorm       47 #> 46:                                                  rxnorm       47 #> 47:                                                  rxnorm       47 #> 48:                                                  rxnorm       47 #> 49:                                          MedChemExpress       48 #> 50:                                        Probes And Drugs       49 #>                                                    NameLong sourceID #>                                                                                                                       sourceURL #>                                                                                                                          <char> #>  1:                                                                    https://www.ebi.ac.uk/chembldb/compound/inspect/CHEMBL25 #>  2:                                                                                        http://www.drugbank.ca/drugs/DB00945 #>  3:                                                            http://www.ebi.ac.uk/pdbe-srv/pdbechem/chemicalCompound/show/AIN #>  4:                                                  http://www.guidetopharmacology.org/GRAC/LigandDisplayForward?ligandId=4139 #>  5:                                                                          http://pubchem.ncbi.nlm.nih.gov/substance/24714725 #>  6:                                                                              http://www.genome.jp/dbget-bin/www_bget?C01405 #>  7:                                                                http://www.ebi.ac.uk/chebi/searchId.do?chebiId=CHEBI%3A15365 #>  8:                                                                       http://zinc15.docking.org/substances/ZINC000000000053 #>  9:                                                                          https://www.emolecules.com/cgi-bin/more?vid=474821 #> 10:                                                          http://www.ebi.ac.uk/gxa/query?conditionQuery=acetylsalicylic acid #> 11:                                                                       http://www.ebi.ac.uk/gxa/query?conditionQuery=aspirin #> 12:                                                                    https://precision.fda.gov/uniisearch/srs/unii/R16CO5Y76E #> 13:                                                                             https://www.surechembl.org/chemical/SCHEMBL1353 #> 14:                                                                                      https://www.pharmgkb.org/drug/PA448497 #> 15:                                                                                  http://www.hmdb.ca/metabolites/HMDB0001879 #> 16:                                                       http://www.selleckchem.com/products/aspirin-acetylsalicylic-acid.html #> 17:                                                                          http://pubchem.ncbi.nlm.nih.gov/substance/15195166 #> 18:                                                                               http://pubchem.ncbi.nlm.nih.gov/compound/2244 #> 19:                                                                                          https://mcule.com/MCULE-3199019536 #> 20:                                                                                     http://nmrshiftdb.org/molecule/20038075 #> 21:                                                                         http://identifiers.org/lincs.smallmolecule/LSM-5288 #> 22:                                                                     http://actor.epa.gov/actor/chemical.xhtml?casrn=50-78-2 #> 23:                                                                  http://actor.epa.gov/actor/chemical.xhtml?casrn=11126-35-5 #> 24:                                                                     http://jglobal.jst.go.jp/en/redirect?Nikkaji_No=J2.300K #> 25:                                            http://www.bindingdb.org/bind/chemsearch/marvin/MolStructure.jsp?monomerid=22360 #> 26:                                                                             https://comptox.epa.gov/dashboard/DTXSID5020108 #> 27:                                                                                          http://drugcentral.org/drugcard/74 #> 28:                                                             https://www.brenda-enzymes.org/ligand.php?brenda_ligand_id=4779 #> 29:                                                             https://www.brenda-enzymes.org/ligand.php?brenda_ligand_id=3100 #> 30:                                                           https://www.brenda-enzymes.org/ligand.php?brenda_ligand_id=159662 #> 31:                                                             https://www.brenda-enzymes.org/ligand.php?brenda_ligand_id=2261 #> 32:                                                             https://www.brenda-enzymes.org/ligand.php?brenda_ligand_id=6476 #> 33:                                                            https://www.brenda-enzymes.org/ligand.php?brenda_ligand_id=32748 #> 34:                                                           https://www.chemicalbook.com/ChemicalProductProperty_EN_CB4421683 #> 35:                                                           https://www.chemicalbook.com/ChemicalProductProperty_EN_CB5114818 #> 36: https://dailymed.nlm.nih.gov/dailymed/search.cfm?adv=1&labeltype=human&query=ACTIVEMOIETY:(ASPIRIN)+OR+INGREDIENT:(ASPIRIN) #> 37:                                                  https://www.clinicaltrials.gov/ct2/results?cond=&term=ACETYLSALICYLIC ACID #> 38:                                                               https://www.clinicaltrials.gov/ct2/results?cond=&term=DURLAZA #> 39:                                                               https://www.clinicaltrials.gov/ct2/results?cond=&term=ASPIRIN #> 40:                                                     https://www.clinicaltrials.gov/ct2/results?cond=&term=ASPIRIN DL-LYSINE #> 41:                                                             https://www.clinicaltrials.gov/ct2/results?cond=&term=VENOPIRIN #> 42:                                                              https://www.clinicaltrials.gov/ct2/results?cond=&term=MEASURIN #> 43:                                                            https://www.clinicaltrials.gov/ct2/results?cond=&term=BAY1019036 #> 44:                                               https://www.clinicaltrials.gov/ct2/results?cond=&term=LYSINE ACETYLSALICYLATE #> 45:                                                       https://mor.nlm.nih.gov/RxNav/search?searchBy=RXCUI&searchTerm=202554 #> 46:                                                         https://mor.nlm.nih.gov/RxNav/search?searchBy=RXCUI&searchTerm=1191 #> 47:                                                        https://mor.nlm.nih.gov/RxNav/search?searchBy=RXCUI&searchTerm=91101 #> 48:                                                      https://mor.nlm.nih.gov/RxNav/search?searchBy=RXCUI&searchTerm=1665357 #> 49:                                                                                     https://www.medchemexpress.com/HY-14654 #> 50:                                                                              https://www.probes-drugs.org/compound/PD002467 #>                                                                                                                       sourceURL #>  #> $UniChem_Mappings #> $UniChem_Mappings$UniChem.UCI #> [1] 161671 #>  #> $UniChem_Mappings$UniChem.InchiKey #> [1] \"BSYNRYMUTXBXSQ-UHFFFAOYSA-N\" #>  #> $UniChem_Mappings$UniChem.Inchi #> [1] \"InChI=1S/C9H8O4/c1-6(10)13-8-5-3-2-4-7(8)9(11)12/h2-5H,1H3,(H,11,12)\" #>  #> $UniChem_Mappings$UniChem.formula #> [1] \"C9H8O4\" #>  #> $UniChem_Mappings$UniChem.connections #> [1] \"1-6(10)13-8-5-3-2-4-7(8)9(11)12\" #>  #> $UniChem_Mappings$UniChem.hAtoms #> [1] \"2-5H,1H3,(H,11,12)\""},{"path":"https://bhklab.github.io/AnnotationGx/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jermiah Joseph. Author, maintainer. Christopher Eeles. Author. Benjamin Haibe-Kains. Author.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Joseph J, Eeles C, Haibe-Kains B (2024). AnnotationGx: AnnotationGx: package building, updating querying annotation database pharmaco-genomic data. R package version 0.0.0.9088, https://bhklab.github.io/AnnotationGx/.","code":"@Manual{,   title = {AnnotationGx: AnnotationGx: A package for building, updating and querying an annotation database for pharmaco-genomic data},   author = {Jermiah Joseph and Christopher Eeles and Benjamin Haibe-Kains},   year = {2024},   note = {R package version 0.0.0.9088},   url = {https://bhklab.github.io/AnnotationGx/}, }"},{"path":[]},{"path":"https://bhklab.github.io/AnnotationGx/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"AnnotationGx: A package for building, updating and querying an\n    annotation database for pharmaco-genomic data","text":"can install github using:","code":"remotes::install_github(     \"bhklab/AnnotationGx\",      build_manual=TRUE,      build_vignettes=TRUE )"},{"path":"https://bhklab.github.io/AnnotationGx/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"AnnotationGx: A package for building, updating and querying an\n    annotation database for pharmaco-genomic data","text":"First load package: Annotate cell line using cellosaurus: Annotate drugs using PubChem:","code":"library(AnnotationGx) help(package=\"AnnotationGx\") name <- \"A549\"  mapCell2Accession(name) drugs <- c(   \"Aspirin\", \"Erlotinib\", \"Acadesine\",    \"Camptothecin\", \"Vincaleukoblastine\", \"Cisplatin\" )  (compound_2_cids <- mapCompound2CID(drugs, first = TRUE)) mapCID2Properties(     ids = compound_2_cids$cids,     properties = c(\"Title\", \"MolecularFormula\", \"InChIKey\", \"MolecularWeight\") )  annotatePubchemCompound(     cids = compound_2_cids$cids,,      heading = \"CAS\" )"},{"path":"https://bhklab.github.io/AnnotationGx/reference/AnnotationGx-package.html","id":null,"dir":"Reference","previous_headings":"","what":"AnnotationGx: AnnotationGx: A package for building, updating and querying an annotation database for pharmaco-genomic data — AnnotationGx-package","title":"AnnotationGx: AnnotationGx: A package for building, updating and querying an annotation database for pharmaco-genomic data — AnnotationGx-package","text":"package building, updating querying annotation database pharmaco-genomic data. Provides API interfaces various bioinformatic chemoinformatic databases, well set functions curating data using annotations retrieved APIs.","code":""},{"path":[]},{"path":"https://bhklab.github.io/AnnotationGx/reference/AnnotationGx-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"AnnotationGx: AnnotationGx: A package for building, updating and querying an annotation database for pharmaco-genomic data — AnnotationGx-package","text":"Maintainer: Jermiah Joseph jermiah.joseph@gmail.com Authors: Christopher Eeles christopher.eeles@uhnresearch.ca Benjamin Haibe-Kains benjamin.haibe.kains@utoronto.ca","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/CCLE_sampleMetadata.html","id":null,"dir":"Reference","previous_headings":"","what":"CCLE_sampleMetadata is some preprocessed sample metadata from the CCLE dataset — CCLE_sampleMetadata","title":"CCLE_sampleMetadata is some preprocessed sample metadata from the CCLE dataset — CCLE_sampleMetadata","text":"CCLE_sampleMetadata preprocessed sample metadata CCLE dataset","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/CCLE_sampleMetadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CCLE_sampleMetadata is some preprocessed sample metadata from the CCLE dataset — CCLE_sampleMetadata","text":"","code":"CCLE_sampleMetadata"},{"path":"https://bhklab.github.io/AnnotationGx/reference/CCLE_sampleMetadata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"CCLE_sampleMetadata is some preprocessed sample metadata from the CCLE dataset — CCLE_sampleMetadata","text":"object class data.table (inherits data.frame) 1461 rows 4 columns.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/CTRP_sampleMetadata.html","id":null,"dir":"Reference","previous_headings":"","what":"CTRP_sampleMetadata is some preprocessed sample metadata from the CTRP dataset — CTRP_sampleMetadata","title":"CTRP_sampleMetadata is some preprocessed sample metadata from the CTRP dataset — CTRP_sampleMetadata","text":"CTRP_sampleMetadata preprocessed sample metadata CTRP dataset","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/CTRP_sampleMetadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CTRP_sampleMetadata is some preprocessed sample metadata from the CTRP dataset — CTRP_sampleMetadata","text":"","code":"CTRP_sampleMetadata"},{"path":"https://bhklab.github.io/AnnotationGx/reference/CTRP_sampleMetadata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"CTRP_sampleMetadata is some preprocessed sample metadata from the CTRP dataset — CTRP_sampleMetadata","text":"object class data.table (inherits data.frame) 1107 rows 2 columns.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/GDSC_sampleMetadata.html","id":null,"dir":"Reference","previous_headings":"","what":"gdsc_sampleMetadata is some preprocessed sample metadata from the GDSC dataset — GDSC_sampleMetadata","title":"gdsc_sampleMetadata is some preprocessed sample metadata from the GDSC dataset — GDSC_sampleMetadata","text":"preprocessed version sample metadata GDSC dataset. dataset contains following columns: GDSC.Sample_Name, GDSC.BROAD_ID, GDSC.RRID, GDSC.COSMIC_ID, CCLE.sampleid. dataset used AnnotationGx package map cell line names various sources Cellosaurus database.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/GDSC_sampleMetadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"gdsc_sampleMetadata is some preprocessed sample metadata from the GDSC dataset — GDSC_sampleMetadata","text":"","code":"data(GDSC_sampleMetadata)"},{"path":"https://bhklab.github.io/AnnotationGx/reference/GDSC_sampleMetadata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"gdsc_sampleMetadata is some preprocessed sample metadata from the GDSC dataset — GDSC_sampleMetadata","text":"data table 5 columns 1001 rows. GDSC.Sample_Name char name cell line GDSC dataset. GDSC.COSMIC_ID int COSMIC ID cell line GDSC dataset.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/GDSC_sampleMetadata.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"gdsc_sampleMetadata is some preprocessed sample metadata from the GDSC dataset — GDSC_sampleMetadata","text":"https://www.cancerrxgene.org/","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/GDSC_sampleMetadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"gdsc_sampleMetadata is some preprocessed sample metadata from the GDSC dataset — GDSC_sampleMetadata","text":"","code":"data(GDSC_sampleMetadata) head(GDSC_sampleMetadata) #>    GDSC.Sample_Name GDSC.COSMIC_ID #>              <char>          <num> #> 1:             A253         906794 #> 2:         BB30-HNC         753531 #> 3:         BB49-HNC         753532 #> 4:              BHY         753535 #> 5:           BICR10        1290724 #> 6:           BICR22        1240121"},{"path":"https://bhklab.github.io/AnnotationGx/reference/annotatePubchemCompound.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotate PubChem Compound — annotatePubchemCompound","title":"Annotate PubChem Compound — annotatePubchemCompound","text":"function retrieves information PubChem compound based provided compound ID (CID).","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/annotatePubchemCompound.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotate PubChem Compound — annotatePubchemCompound","text":"","code":"annotatePubchemCompound(   cids,   heading = \"ChEMBL ID\",   source = NULL,   parse_function = identity,   query_only = FALSE,   raw = FALSE )"},{"path":"https://bhklab.github.io/AnnotationGx/reference/annotatePubchemCompound.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotate PubChem Compound — annotatePubchemCompound","text":"cids compound ID (CID) PubChem compound. heading type information retrieve. Default \"ChEMBL ID\". source data source use. Default NULL. parse_function custom parsing function process response. Default identity function. query_only Logical indicating whether return query URL . Default FALSE. raw Logical indicating whether return raw response. Default FALSE.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/annotatePubchemCompound.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Annotate PubChem Compound — annotatePubchemCompound","text":"annotated information PubChem compound.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/annotatePubchemCompound.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Annotate PubChem Compound — annotatePubchemCompound","text":"","code":"annotatePubchemCompound(cid = 2244) #> [1] \"CHEMBL25\" annotatePubchemCompound(cid = c(2244, 67890), heading = \"CAS\") #> [1] \"50-78-2\"  \"407-59-0\""},{"path":"https://bhklab.github.io/AnnotationGx/reference/cleanCharacterStrings.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean character strings by removing special characters and formatting. — cleanCharacterStrings","title":"Clean character strings by removing special characters and formatting. — cleanCharacterStrings","text":"function takes character string input performs several cleaning operations remove special characters, formatting, unwanted substrings. cleaned string returned output.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/cleanCharacterStrings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean character strings by removing special characters and formatting. — cleanCharacterStrings","text":"","code":"cleanCharacterStrings(name, space_action = \"\")"},{"path":"https://bhklab.github.io/AnnotationGx/reference/cleanCharacterStrings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean character strings by removing special characters and formatting. — cleanCharacterStrings","text":"name character string cleaned. space_action character vector specifying actions taken space characters. One c(\"\", \"-\", \" \").","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/cleanCharacterStrings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean character strings by removing special characters and formatting. — cleanCharacterStrings","text":"cleaned character string.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/cleanCharacterStrings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clean character strings by removing special characters and formatting. — cleanCharacterStrings","text":"","code":"cleanCharacterStrings(\"Cisplatin: 1 mg/mL (1.5 mM); 5 mM in DMSO\") #> [1] \"CISPLATIN\""},{"path":"https://bhklab.github.io/AnnotationGx/reference/gCSI_sampleMetadata.html","id":null,"dir":"Reference","previous_headings":"","what":"gCSI_sampleMetadata is some preprocessed sample metadata from the NCI60 dataset — gCSI_sampleMetadata","title":"gCSI_sampleMetadata is some preprocessed sample metadata from the NCI60 dataset — gCSI_sampleMetadata","text":"gCSI_sampleMetadata preprocessed sample metadata NCI60 dataset","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/gCSI_sampleMetadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"gCSI_sampleMetadata is some preprocessed sample metadata from the NCI60 dataset — gCSI_sampleMetadata","text":"","code":"gCSI_sampleMetadata"},{"path":"https://bhklab.github.io/AnnotationGx/reference/gCSI_sampleMetadata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"gCSI_sampleMetadata is some preprocessed sample metadata from the NCI60 dataset — gCSI_sampleMetadata","text":"object class data.table (inherits data.frame) 1350 rows 2 columns.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/getChemblFilterTypes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the Chembl filter types — getChemblFilterTypes","title":"Get the Chembl filter types — getChemblFilterTypes","text":"function retrieves Chembl filter types.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/getChemblFilterTypes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the Chembl filter types — getChemblFilterTypes","text":"","code":"getChemblFilterTypes()"},{"path":"https://bhklab.github.io/AnnotationGx/reference/getChemblFilterTypes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the Chembl filter types — getChemblFilterTypes","text":"list Chembl filter types.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/getChemblFilterTypes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the Chembl filter types — getChemblFilterTypes","text":"","code":"getChemblFilterTypes() #>  [1] \"exact\"       \"iexact\"      \"contains\"    \"icontains\"   \"startswith\"  #>  [6] \"istartswith\" \"endswith\"    \"iendswith\"   \"regex\"       \"iregex\"      #> [11] \"gt\"          \"gte\"         \"lt\"          \"lte\"         \"range\"       #> [16] \"in\"          \"isnull\"      \"search\"      \"only\""},{"path":"https://bhklab.github.io/AnnotationGx/reference/getChemblMechanism.html","id":null,"dir":"Reference","previous_headings":"","what":"Get ChEMBL Mechanism — getChemblMechanism","title":"Get ChEMBL Mechanism — getChemblMechanism","text":"function retrieves information mechanism action given ChEMBL ID.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/getChemblMechanism.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get ChEMBL Mechanism — getChemblMechanism","text":"","code":"getChemblMechanism(   chembl.ID,   resources = \"mechanism\",   field = \"molecule_chembl_id\",   filter_type = \"in\",   returnURL = FALSE,   raw = FALSE )"},{"path":"https://bhklab.github.io/AnnotationGx/reference/getChemblMechanism.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get ChEMBL Mechanism — getChemblMechanism","text":"chembl.ID ChEMBL ID molecule. resources ChEMBL resource query (default: \"mechanism\"). field field filter (default: \"molecule_chembl_id\"). filter_type filter type use (default: \"\"). returnURL Logical indicating whether return constructed URL (default: FALSE). raw Logical indicating whether return raw response JSON (default: FALSE).","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/getChemblMechanism.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get ChEMBL Mechanism — getChemblMechanism","text":"data.table containing retrieved mechanism information.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/getChemblMechanism.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get ChEMBL Mechanism — getChemblMechanism","text":"","code":"getChemblMechanism(\"CHEMBL1413\") #>        action_type binding_site_comment direct_interaction disease_efficacy #>             <char>               <lgcl>              <int>            <int> #> 1: CHELATING AGENT                   NA                  1                1 #> 2: CHELATING AGENT                   NA                  1                1 #>    max_phase mec_id #>        <int>  <int> #> 1:         4   2200 #> 2:         4   2224 #>                                                                                                                                                  mechanism_comment #>                                                                                                                                                             <char> #> 1: Trivalent metal cations chelating agent; inhibition of the metal-dependent enzymes that are responsible for the degradation of peroxides within the fungal cell #> 2: Trivalent metal cations chelating agent; inhibition of the metal-dependent enzymes that are responsible for the degradation of peroxides within the fungal cell #>          mechanism_of_action    mechanism_refs molecular_mechanism #>                       <char>            <list>               <int> #> 1:      Iron chelating agent <data.frame[3x3]>                   1 #> 2: Aluminium chelating agent <data.frame[3x3]>                   1 #>    molecule_chembl_id parent_molecule_chembl_id record_id selectivity_comment #>                <char>                    <char>     <int>              <lgcl> #> 1:         CHEMBL1413                CHEMBL1413   1343970                  NA #> 2:         CHEMBL1413                CHEMBL1413   1343970                  NA #>    site_id target_chembl_id variant_sequence #>     <lgcl>           <char>           <lgcl> #> 1:      NA    CHEMBL2363058               NA #> 2:      NA    CHEMBL2366381               NA getChemblMechanism(\"CHEMBL1413\",   resources = \"mechanism\", field = \"molecule_chembl_id\",   filter_type = \"in\", returnURL = FALSE, raw = FALSE ) #>        action_type binding_site_comment direct_interaction disease_efficacy #>             <char>               <lgcl>              <int>            <int> #> 1: CHELATING AGENT                   NA                  1                1 #> 2: CHELATING AGENT                   NA                  1                1 #>    max_phase mec_id #>        <int>  <int> #> 1:         4   2200 #> 2:         4   2224 #>                                                                                                                                                  mechanism_comment #>                                                                                                                                                             <char> #> 1: Trivalent metal cations chelating agent; inhibition of the metal-dependent enzymes that are responsible for the degradation of peroxides within the fungal cell #> 2: Trivalent metal cations chelating agent; inhibition of the metal-dependent enzymes that are responsible for the degradation of peroxides within the fungal cell #>          mechanism_of_action    mechanism_refs molecular_mechanism #>                       <char>            <list>               <int> #> 1:      Iron chelating agent <data.frame[3x3]>                   1 #> 2: Aluminium chelating agent <data.frame[3x3]>                   1 #>    molecule_chembl_id parent_molecule_chembl_id record_id selectivity_comment #>                <char>                    <char>     <int>              <lgcl> #> 1:         CHEMBL1413                CHEMBL1413   1343970                  NA #> 2:         CHEMBL1413                CHEMBL1413   1343970                  NA #>    site_id target_chembl_id variant_sequence #>     <lgcl>           <char>           <lgcl> #> 1:      NA    CHEMBL2363058               NA #> 2:      NA    CHEMBL2366381               NA"},{"path":"https://bhklab.github.io/AnnotationGx/reference/getChemblResourceFields.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the fields of a Chembl resource — getChemblResourceFields","title":"Get the fields of a Chembl resource — getChemblResourceFields","text":"function retrieves fields Chembl resource.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/getChemblResourceFields.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the fields of a Chembl resource — getChemblResourceFields","text":"","code":"getChemblResourceFields(resource)"},{"path":"https://bhklab.github.io/AnnotationGx/reference/getChemblResourceFields.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the fields of a Chembl resource — getChemblResourceFields","text":"resource Chembl resource.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/getChemblResourceFields.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the fields of a Chembl resource — getChemblResourceFields","text":"character vector containing names fields.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/getChemblResourceFields.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the fields of a Chembl resource — getChemblResourceFields","text":"","code":"getChemblResourceFields(\"molecule\") #>  [1] \"atc_classifications\"  \"availability_type\"    \"biotherapeutic\"       #>  [4] \"black_box_warning\"    \"chebi_par_id\"         \"chemical_probe\"       #>  [7] \"chirality\"            \"cross_references\"     \"dosed_ingredient\"     #> [10] \"first_approval\"       \"first_in_class\"       \"helm_notation\"        #> [13] \"indication_class\"     \"inorganic_flag\"       \"max_phase\"            #> [16] \"molecule_chembl_id\"   \"molecule_hierarchy\"   \"molecule_properties\"  #> [19] \"molecule_structures\"  \"molecule_synonyms\"    \"molecule_type\"        #> [22] \"natural_product\"      \"oral\"                 \"parenteral\"           #> [25] \"polymer_flag\"         \"pref_name\"            \"prodrug\"              #> [28] \"score\"                \"structure_type\"       \"therapeutic_flag\"     #> [31] \"topical\"              \"usan_stem\"            \"usan_stem_definition\" #> [34] \"usan_substem\"         \"usan_year\"            \"withdrawn_flag\""},{"path":"https://bhklab.github.io/AnnotationGx/reference/getChemblResources.html","id":null,"dir":"Reference","previous_headings":"","what":"getChemblResources function — getChemblResources","title":"getChemblResources function — getChemblResources","text":"function retrieves Chembl resources.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/getChemblResources.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"getChemblResources function — getChemblResources","text":"","code":"getChemblResources()"},{"path":"https://bhklab.github.io/AnnotationGx/reference/getChemblResources.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"getChemblResources function — getChemblResources","text":"list Chembl resources.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/getChemblResources.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"getChemblResources function — getChemblResources","text":"","code":"getChemblResources() #>  [1] \"activity\"                  \"assay\"                     #>  [3] \"atc_class\"                 \"binding_site\"              #>  [5] \"biotherapeutic\"            \"cell_line\"                 #>  [7] \"chembl_id_lookup\"          \"compound_record\"           #>  [9] \"compound_structural_alert\" \"document\"                  #> [11] \"document_similarity\"       \"document_term\"             #> [13] \"drug\"                      \"drug_indication\"           #> [15] \"drug_warning\"              \"go_slim\"                   #> [17] \"image\"                     \"mechanism\"                 #> [19] \"metabolism\"                \"molecule\"                  #> [21] \"molecule_form\"             \"organism\"                  #> [23] \"protein_classification\"    \"similarity\"                #> [25] \"source\"                    \"status\"                    #> [27] \"substructure\"              \"target\"                    #> [29] \"target_component\"          \"target_relation\"           #> [31] \"tissue\"                    \"xref_source\""},{"path":"https://bhklab.github.io/AnnotationGx/reference/getOncotreeMainTypes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the main types from the Oncotree database. — getOncotreeMainTypes","title":"Get the main types from the Oncotree database. — getOncotreeMainTypes","text":"function retrieves main types Oncotree database.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/getOncotreeMainTypes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the main types from the Oncotree database. — getOncotreeMainTypes","text":"","code":"getOncotreeMainTypes()"},{"path":"https://bhklab.github.io/AnnotationGx/reference/getOncotreeMainTypes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the main types from the Oncotree database. — getOncotreeMainTypes","text":"data.table containing main types Oncotree database.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/getOncotreeTumorTypes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the tumor types from the Oncotree database. — getOncotreeTumorTypes","title":"Get the tumor types from the Oncotree database. — getOncotreeTumorTypes","text":"function retrieves tumor types Oncotree database.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/getOncotreeTumorTypes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the tumor types from the Oncotree database. — getOncotreeTumorTypes","text":"","code":"getOncotreeTumorTypes()"},{"path":"https://bhklab.github.io/AnnotationGx/reference/getOncotreeTumorTypes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the tumor types from the Oncotree database. — getOncotreeTumorTypes","text":"data.table containing tumor types Oncotree database.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/getOncotreeVersions.html","id":null,"dir":"Reference","previous_headings":"","what":"Get available Oncotree versions — getOncotreeVersions","title":"Get available Oncotree versions — getOncotreeVersions","text":"function retrieves available versions Oncotree.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/getOncotreeVersions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get available Oncotree versions — getOncotreeVersions","text":"","code":"getOncotreeVersions()"},{"path":"https://bhklab.github.io/AnnotationGx/reference/getOncotreeVersions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get available Oncotree versions — getOncotreeVersions","text":"data.table containing available Oncotree versions.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/getPubchemAnnotationHeadings.html","id":null,"dir":"Reference","previous_headings":"","what":"Get annotation headings (name only) based on type and heading criteria. — getPubchemAnnotationHeadings","title":"Get annotation headings (name only) based on type and heading criteria. — getPubchemAnnotationHeadings","text":"Get annotation headings (name ) based type heading criteria.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/getPubchemAnnotationHeadings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get annotation headings (name only) based on type and heading criteria. — getPubchemAnnotationHeadings","text":"","code":"getPubchemAnnotationHeadings(type = \"all\", heading = NULL)"},{"path":"https://bhklab.github.io/AnnotationGx/reference/getPubchemAnnotationHeadings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get annotation headings (name only) based on type and heading criteria. — getPubchemAnnotationHeadings","text":"type type annotation headings retrieve. Options include \"Compound\", \"Gene\", \"Taxonomy\", \"Element\", \"Assay\", \"Protein\", \"Cell\", \"Pathway\", \"\" (default). heading specific heading filter results . Defaults NULL, retrieves headings.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/getPubchemAnnotationHeadings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get annotation headings (name only) based on type and heading criteria. — getPubchemAnnotationHeadings","text":"data.table containing annotation headings types.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/getPubchemAnnotationHeadings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get annotation headings (name only) based on type and heading criteria. — getPubchemAnnotationHeadings","text":"","code":"getPubchemAnnotationHeadings() #>               Heading     Type #>                <char>   <char> #>   1:  11B NMR Spectra Compound #>   2:  13C NMR Spectra Compound #>   3:  15N NMR Spectra Compound #>   4:  17O NMR Spectra Compound #>   5:  19F NMR Spectra Compound #>  ---                           #> 636: Wiley References Compound #> 637:      WormBase ID     Gene #> 638:      WormBase ID  Protein #> 639:  Xenbase Gene ID     Gene #> 640:          ZFIN ID     Gene getPubchemAnnotationHeadings(type = \"Compound\") #>                                        Heading     Type #>                                         <char>   <char> #>   1:                           11B NMR Spectra Compound #>   2:                           13C NMR Spectra Compound #>   3:                           15N NMR Spectra Compound #>   4:                           17O NMR Spectra Compound #>   5:                           19F NMR Spectra Compound #>  ---                                                    #> 475: Volatilization from Water/Soil (Complete) Compound #> 476:                   WHO Essential Medicines Compound #> 477:                                  Wikidata Compound #> 478:                                 Wikipedia Compound #> 479:                          Wiley References Compound getPubchemAnnotationHeadings(heading = \"ChEMBL*\") #>                Heading     Type #>                 <char>   <char> #> 1: ChEMBL Cell Line ID     Cell #> 2:           ChEMBL ID Compound #> 3:    ChEMBL Target ID  Protein getPubchemAnnotationHeadings(type = \"Compound\", heading = \"ChEMBL*\") #>      Heading     Type #>       <char>   <char> #> 1: ChEMBL ID Compound"},{"path":"https://bhklab.github.io/AnnotationGx/reference/getPubchemCompound.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve PubChem compound information — getPubchemCompound","title":"Retrieve PubChem compound information — getPubchemCompound","text":"function retrieves compound information PubChem using PubChem REST API. Used functions retrieve compound information.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/getPubchemCompound.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve PubChem compound information — getPubchemCompound","text":"","code":"getPubchemCompound(   ids,   from = \"cid\",   to = \"property\",   properties = c(\"Title\", \"InChIKey\"),   raw = FALSE,   query_only = FALSE,   output = \"JSON\",   ... )"},{"path":"https://bhklab.github.io/AnnotationGx/reference/getPubchemCompound.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve PubChem compound information — getPubchemCompound","text":"ids vector compound identifiers. source namespace compound identifiers. Default 'cid'. target namespace compound information. Default 'property'. properties character vector specifying properties retrieve. raw Logical indicating whether return raw query results. Default FALSE. query_only Logical indicating whether perform query without retrieving results. Default FALSE. output format query results. Default 'JSON'. ... Additional arguments passed query_pubchem_rest function.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/getPubchemCompound.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve PubChem compound information — getPubchemCompound","text":"data.table containing retrieved compound information.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/getPubchemCompound.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve PubChem compound information — getPubchemCompound","text":"","code":"properties <- c(\"Title\", \"MolecularFormula\", \"InChIKey\", \"CanonicalSMILES\") getPubchemCompound(c(3672, 176870), from = \"cid\", to = \"property\", properties = properties) #>       CID MolecularFormula                                      CanonicalSMILES #>     <int>           <char>                                               <char> #> 1:   3672         C13H18O2                        CC(C)CC1=CC=C(C=C1)C(C)C(=O)O #> 2: 176870       C22H23N3O4 COCCOC1=C(C=C2C(=C1)C(=NC=N2)NC3=CC=CC(=C3)C#C)OCCOC #>                       InChIKey     Title #>                         <char>    <char> #> 1: HEFNNWSXXWATRW-UHFFFAOYSA-N Ibuprofen #> 2: AAKJLRGGTJKAMG-UHFFFAOYSA-N Erlotinib"},{"path":"https://bhklab.github.io/AnnotationGx/reference/getPubchemProperties.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieves the PubChem XML schema and extracts property information. — getPubchemProperties","title":"Retrieves the PubChem XML schema and extracts property information. — getPubchemProperties","text":"function retrieves PubChem XML schema specified URL extracts property information . property information includes name type property.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/getPubchemProperties.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieves the PubChem XML schema and extracts property information. — getPubchemProperties","text":"","code":"getPubchemProperties()"},{"path":"https://bhklab.github.io/AnnotationGx/reference/getPubchemProperties.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieves the PubChem XML schema and extracts property information. — getPubchemProperties","text":"data table containing extracted property information.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/getPubchemStatus.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieves the status of a PubChem request — getPubchemStatus","title":"Retrieves the status of a PubChem request — getPubchemStatus","text":"function sends request PubChem retrieve status given URL. returns status code , specified, parsed information response.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/getPubchemStatus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieves the status of a PubChem request — getPubchemStatus","text":"","code":"getPubchemStatus(   returnMessage = FALSE,   printMessage = TRUE,   url = \"https://pubchem.ncbi.nlm.nih.gov/rest/pug/compound/name/Aspirin/cids/JSON\" )"},{"path":"https://bhklab.github.io/AnnotationGx/reference/getPubchemStatus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieves the status of a PubChem request — getPubchemStatus","text":"returnMessage Logical indicating whether return parsed information response. printMessage Logical indicating whether print status message. url URL send request . Default \"https://pubchem.ncbi.nlm.nih.gov/rest/pug/compound/name/Aspirin/cids/JSON\".","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/getPubchemStatus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieves the status of a PubChem request — getPubchemStatus","text":"status code response. returnMessage TRUE, parsed information response also returned.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/getPubchemStatus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieves the status of a PubChem request — getPubchemStatus","text":"","code":"getPubchemStatus() #> Throttling status: #> Request Count status: Green (1%) #> Request Time status: Green (0%) #> Service status: Green (10%) getPubchemStatus(returnMessage = TRUE) #> Throttling status: #> Request Count status: Green (1%) #> Request Time status: Green (0%) #> Service status: Green (17%) #> $request_count #> $request_count$status #> [1] \"Green\" #>  #> $request_count$percent #> [1] 1 #>  #>  #> $request_time #> $request_time$status #> [1] \"Green\" #>  #> $request_time$percent #> [1] 0 #>  #>  #> $service #> $service$status #> [1] \"Green\" #>  #> $service$percent #> [1] 17 #>  #>  getPubchemStatus(printMessage = FALSE)"},{"path":"https://bhklab.github.io/AnnotationGx/reference/getUnichemSources.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the list of sources in UniChem. — getUnichemSources","title":"Get the list of sources in UniChem. — getUnichemSources","text":"Get list sources UniChem.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/getUnichemSources.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the list of sources in UniChem. — getUnichemSources","text":"","code":"getUnichemSources(all_columns = FALSE)"},{"path":"https://bhklab.github.io/AnnotationGx/reference/getUnichemSources.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the list of sources in UniChem. — getUnichemSources","text":"all_columns boolean Whether return columns. Defaults FALSE. Returns data.table following columns: CompoundCount (integer): Total compounds provided source BaseURL (string): Source Base URL compounds Description (string): Source database description LastUpdated (string): Date source database last updated Name (string): Short name source database NameLabel (string): Machine readable label name source database NameLong (string): Full name source database SourceID (integer): Unique ID source database Details (string): Notes source ReleaseDate (string): Date source database released ReleaseNumber (integer): Release number source database data stored UniChEM URL (string): Main URL source UpdateComments (string): Notes update process source UniChEM","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/getUnichemSources.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the list of sources in UniChem. — getUnichemSources","text":"data.table list sources UniChem.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/mapCID2Properties.html","id":null,"dir":"Reference","previous_headings":"","what":"Map PubChem Compound IDs to Properties — mapCID2Properties","title":"Map PubChem Compound IDs to Properties — mapCID2Properties","text":"function maps PubChem Compound IDs specified properties using PubChem REST API. See getPubchemProperties list available properties.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/mapCID2Properties.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map PubChem Compound IDs to Properties — mapCID2Properties","text":"","code":"mapCID2Properties(ids, properties, ...)"},{"path":"https://bhklab.github.io/AnnotationGx/reference/mapCID2Properties.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map PubChem Compound IDs to Properties — mapCID2Properties","text":"ids vector PubChem Compound IDs. properties vector property names retrieve compound. ... Additional arguments passed getPubchemCompound function.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/mapCID2Properties.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map PubChem Compound IDs to Properties — mapCID2Properties","text":"data frame containing mapped properties compound.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/mapCID2Properties.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map PubChem Compound IDs to Properties — mapCID2Properties","text":"","code":"mapCID2Properties(ids = c(123, 456), properties = c(\"MolecularWeight\", \"CanonicalSMILES\")) #>      CID MolecularWeight      CanonicalSMILES #>    <int>          <char>               <char> #> 1:   123          144.18   C(CC(=O)N)CN=C(N)N #> 2:   456          132.08 C(=O)(C(=O)O)NC(=O)N"},{"path":"https://bhklab.github.io/AnnotationGx/reference/mapCell2Accession.html","id":null,"dir":"Reference","previous_headings":"","what":"Map Cell Line IDs to Accession Numbers — mapCell2Accession","title":"Map Cell Line IDs to Accession Numbers — mapCell2Accession","text":"function maps cell line IDs accession numbers using Cellosaurus database.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/mapCell2Accession.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map Cell Line IDs to Accession Numbers — mapCell2Accession","text":"","code":"mapCell2Accession(   ids,   numResults = 10000,   from = \"idsy\",   sort = \"ac\",   keep_duplicates = FALSE,   fuzzy = FALSE,   query_only = FALSE,   raw = FALSE,   parsed = FALSE,   ... )"},{"path":"https://bhklab.github.io/AnnotationGx/reference/mapCell2Accession.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map Cell Line IDs to Accession Numbers — mapCell2Accession","text":"ids character vector cell line IDs. numResults maximum number results return query. Default 1000. type input IDs. Possible values \"idsy\" (default), \"ac\", \"id\", \"sy\", \"misspelling\". sort sorting order results. Possible values \"ac\" (default), \"id\", \"sy\", \"misspelling\". keep_duplicates Logical indicating whether keep duplicate results. Default FALSE. fuzzy Logical indicating whether perform fuzzy search. Default FALSE. query_only Logical indicating whether return query URLs. Default FALSE. raw Logical indicating whether return raw HTTP responses. Default FALSE. parsed Logical indicating whether parse response text. Default FALSE. ... Additional arguments passed underlying functions.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/mapCell2Accession.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map Cell Line IDs to Accession Numbers — mapCell2Accession","text":"data.table containing mapped cell line IDs accession numbers.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/mapCell2Accession.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map Cell Line IDs to Accession Numbers — mapCell2Accession","text":"","code":"mapCell2Accession(ids = c(\"A549\", \"MCF7\")) #> [19:58:36][INFO][AnnotationGx::mapCell2Accession]Creating Cellosaurus queries   #> [19:58:36][INFO][AnnotationGx::mapCell2Accession]Building Cellosaurus requests   #> [19:58:36][INFO][AnnotationGx::mapCell2Accession]Performing Cellosaurus queries   #> Iterating ■■■■■■■■■■■■■■■■                  50% | ETA:  1s #> Iterating ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■  100% | ETA:  0s #> [19:58:38][INFO][AnnotationGx::mapCell2Accession]Parsing Cellosaurus responses   #>    cellLineName accession  query #>          <char>    <char> <char> #> 1:        A-549 CVCL_0023   A549 #> 2:        MCF-7 CVCL_0031   MCF7"},{"path":"https://bhklab.github.io/AnnotationGx/reference/mapCompound2CID.html","id":null,"dir":"Reference","previous_headings":"","what":"Map compound names to PubChem CIDs — mapCompound2CID","title":"Map compound names to PubChem CIDs — mapCompound2CID","text":"function maps compound names PubChem CIDs using PubChem REST API.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/mapCompound2CID.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map compound names to PubChem CIDs — mapCompound2CID","text":"","code":"mapCompound2CID(names, first = FALSE, ...)"},{"path":"https://bhklab.github.io/AnnotationGx/reference/mapCompound2CID.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map compound names to PubChem CIDs — mapCompound2CID","text":"names character vector compound names. first Logical indicating whether return first CID compound name (default FALSE). ... Additional arguments passed getPubchemCompound function.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/mapCompound2CID.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map compound names to PubChem CIDs — mapCompound2CID","text":"character vector PubChem CIDs.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/mapCompound2CID.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map compound names to PubChem CIDs — mapCompound2CID","text":"","code":"mapCompound2CID(c(\"aspirin\", \"caffeine\")) #>        name  cids #>      <char> <int> #> 1:  aspirin  2244 #> 2: caffeine  2519"},{"path":"https://bhklab.github.io/AnnotationGx/reference/matchNested.html","id":null,"dir":"Reference","previous_headings":"","what":"Match inside nested elements — matchNested","title":"Match inside nested elements — matchNested","text":"Match inside nested elements","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/matchNested.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match inside nested elements — matchNested","text":"","code":"matchNested(x, table, ..., keep_duplicates = FALSE)  # S4 method for character,list matchNested(x, table, keep_duplicates)  # S4 method for numeric,list matchNested(x, table, keep_duplicates)  # S4 method for character,data.table matchNested(x, table, keep_duplicates)  # S4 method for numeric,data.table matchNested(x, table, keep_duplicates)  # S4 method for character,data.frame matchNested(x, table, keep_duplicates)  # S4 method for character,data.frame matchNested(x, table, keep_duplicates)"},{"path":"https://bhklab.github.io/AnnotationGx/reference/matchNested.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match inside nested elements — matchNested","text":"x values matched. table values matched . Applies across rows DataFrame method. ... Additional arguments passed method. keep_duplicates logical value indicating whether keep duplicates.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/matchNested.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Match inside nested elements — matchNested","text":"integer. positional vector corresponding values defined table size x.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/matchNested.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Match inside nested elements — matchNested","text":"Intentionally performs exact matching. Refer filterNested function partial matching support regular expressions.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/matchNested.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Match inside nested elements — matchNested","text":"","code":"showMethods(\"matchNested\") #> Function: matchNested (package AnnotationGx) #> x=\"character\", table=\"data.frame\" #> x=\"character\", table=\"data.table\" #> x=\"character\", table=\"list\" #> x=\"numeric\", table=\"data.table\" #> x=\"numeric\", table=\"list\" #>"},{"path":"https://bhklab.github.io/AnnotationGx/reference/options.html","id":null,"dir":"Reference","previous_headings":"","what":"AnnotationGx Options — options","title":"AnnotationGx Options — options","text":"Internally used, package-specific options. options prioritize R options() values, fall back environment variables undefined. neither option environment variable set, default value used.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/options.html","id":"checking-option-values","dir":"Reference","previous_headings":"","what":"Checking Option Values","title":"AnnotationGx Options — options","text":"Option values specific AnnotationGx can accessed passing package name env.","code":"options::opts(env = \"AnnotationGx\")  options::opt(x, default, env = \"AnnotationGx\")"},{"path":"https://bhklab.github.io/AnnotationGx/reference/options.html","id":"options","dir":"Reference","previous_headings":"","what":"Options","title":"AnnotationGx Options — options","text":"log_level default: \"WARNING\" option: annotationgx_log_level envvar: ANNOTATIONGX_LOGLEVEL (evaluated possible, raw string otherwise) verbose default: FALSE option: annotationgx_verbose envvar: ANNOTATIONGX_VERBOSE (evaluated possible, raw string otherwise)","code":"\"WARNING\" FALSE"},{"path":[]},{"path":"https://bhklab.github.io/AnnotationGx/reference/queryChemblAPI.html","id":null,"dir":"Reference","previous_headings":"","what":"Query the ChEMBL API — queryChemblAPI","title":"Query the ChEMBL API — queryChemblAPI","text":"function queries ChEMBL API using specified parameters returns response JSON format.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/queryChemblAPI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query the ChEMBL API — queryChemblAPI","text":"","code":"queryChemblAPI(resource, field, filter_type, value, format = \"json\")"},{"path":"https://bhklab.github.io/AnnotationGx/reference/queryChemblAPI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query the ChEMBL API — queryChemblAPI","text":"resource resource query ChEMBL API. field field filter ChEMBL API. filter_type type filter apply ChEMBL API. value value filter ChEMBL API. format format response (default \"json\").","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/queryChemblAPI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Query the ChEMBL API — queryChemblAPI","text":"response ChEMBL API JSON format.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/queryChemblAPI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Query the ChEMBL API — queryChemblAPI","text":"","code":"queryChemblAPI(\"mechanism\", \"molecule_chembl_id\", \"in\", \"CHEMBL1413\") #> $mechanisms #>       action_type binding_site_comment direct_interaction disease_efficacy #> 1 CHELATING AGENT                   NA                  1                1 #> 2 CHELATING AGENT                   NA                  1                1 #>   max_phase mec_id #> 1         4   2200 #> 2         4   2224 #>                                                                                                                                                 mechanism_comment #> 1 Trivalent metal cations chelating agent; inhibition of the metal-dependent enzymes that are responsible for the degradation of peroxides within the fungal cell #> 2 Trivalent metal cations chelating agent; inhibition of the metal-dependent enzymes that are responsible for the degradation of peroxides within the fungal cell #>         mechanism_of_action #> 1      Iron chelating agent #> 2 Aluminium chelating agent #>                                                                                                                                                                                                                                 mechanism_refs #> 1 20964457, 23416050, Ciclopirox#cite_note-pmid12760852-4, PubMed, PubMed, Wikipedia, http://europepmc.org/abstract/MED/20964457, http://europepmc.org/abstract/MED/23416050, http://en.wikipedia.org/wiki/Ciclopirox#cite_note-pmid12760852-4 #> 2 20964457, 23416050, Ciclopirox#cite_note-pmid12760852-4, PubMed, PubMed, Wikipedia, http://europepmc.org/abstract/MED/20964457, http://europepmc.org/abstract/MED/23416050, http://en.wikipedia.org/wiki/Ciclopirox#cite_note-pmid12760852-4 #>   molecular_mechanism molecule_chembl_id parent_molecule_chembl_id record_id #> 1                   1         CHEMBL1413                CHEMBL1413   1343970 #> 2                   1         CHEMBL1413                CHEMBL1413   1343970 #>   selectivity_comment site_id target_chembl_id variant_sequence #> 1                  NA      NA    CHEMBL2363058               NA #> 2                  NA      NA    CHEMBL2366381               NA #>  #> $page_meta #> $page_meta$limit #> [1] 20 #>  #> $page_meta$`next` #> NULL #>  #> $page_meta$offset #> [1] 0 #>  #> $page_meta$previous #> NULL #>  #> $page_meta$total_count #> [1] 2 #>  #>"},{"path":"https://bhklab.github.io/AnnotationGx/reference/queryUnichemCompound.html","id":null,"dir":"Reference","previous_headings":"","what":"Query UniChem for a compound. — queryUnichemCompound","title":"Query UniChem for a compound. — queryUnichemCompound","text":"function queries UniChem API compound based provided parameters.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/queryUnichemCompound.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query UniChem for a compound. — queryUnichemCompound","text":"","code":"queryUnichemCompound(   compound,   type,   sourceID = NA_integer_,   request_only = FALSE,   raw = FALSE,   ... )"},{"path":"https://bhklab.github.io/AnnotationGx/reference/queryUnichemCompound.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query UniChem for a compound. — queryUnichemCompound","text":"compound character integer compound identifier search . type character type compound identifier search . Valid types \"uci\", \"inchi\", \"inchikey\", \"sourceID\". sourceID integer source ID search type \"sourceID\". Defaults NULL. request_only boolean Whether return request . Defaults FALSE. raw boolean Whether return raw response. Defaults FALSE. ... Additional arguments.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/queryUnichemCompound.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Query UniChem for a compound. — queryUnichemCompound","text":"list external mappings UniChem mappings.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/queryUnichemCompound.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Query UniChem for a compound. — queryUnichemCompound","text":"","code":"queryUnichemCompound(type = \"sourceID\", compound = \"444795\", sourceID = 22) #> $External_Mappings #>                  compoundID             Name #>                      <char>           <char> #>  1:                CHEMBL38           chembl #>  2:                 DB00755         drugbank #>  3:                     REA              pdb #>  4:                    2644           gtopdb #>  5:                12014646     pubchem_dotf #>  6:                  C00777      kegg_ligand #>  7:                   15367            chebi #>  8:            SAM002264647          nih_ncc #>  9:        ZINC000012358651             zinc #> 10:                 1934590       emolecules #> 11:               tretinoin            atlas #> 12:           retinoic acid            atlas #> 13: all-trans retinoic acid            atlas #> 14:     9-cis retinoic-acid            atlas #> 15:              5688UTC01R           fdasrs #> 16:         SCHEMBL19091395       surechembl #> 17:             SCHEMBL3145       surechembl #> 18:             PA164746900         pharmgkb #> 19:             HMDB0001852             hmdb #> 20:      Tretinoin(Aberela)          selleck #> 21:                14849563  pubchem_tpharma #> 22:                14825303  pubchem_tpharma #> 23:                  444795          pubchem #> 24:                60021090      nmrshiftdb2 #> 25:               LSM-42854            lincs #> 26:               4759-48-2            actor #> 27:                302-79-4            actor #> 28:             187175-63-9            actor #> 29:     MolPort-000-883-857          molport #> 30:             J2.378.058E          nikkaji #> 31:             J1.313.469C          nikkaji #> 32:               J623.910B          nikkaji #> 33:               J970.183D          nikkaji #> 34:                 J1.518K          nikkaji #> 35:               J494.243D          nikkaji #> 36:               J690.379G          nikkaji #> 37:               J646.157C          nikkaji #> 38:               J646.158A          nikkaji #> 39:               J528.606I          nikkaji #> 40:                  323588        bindingdb #> 41:                   31883        bindingdb #> 42:           DTXSID7021239          comptox #> 43:            LMPR01090019        lipidmaps #> 44:                    2722      drugcentral #> 45:              MTBLC15367     metabolights #> 46:                    6481           brenda #> 47:                   12679           brenda #> 48:                   21231           brenda #> 49:                    2354           brenda #> 50:                    5126           brenda #> 51:                  193381           brenda #> 52:                  260365           brenda #> 53:               CB6222631     chemicalbook #> 54:               TRETINOIN         dailymed #> 55:                  EUDYNA   clinicaltrials #> 56:               TRETINOIN   clinicaltrials #> 57:                  ABEREL   clinicaltrials #> 58:                  RENOVA   clinicaltrials #> 59:                   AVITA   clinicaltrials #> 60:              NSC-122758   clinicaltrials #> 61:                VESANOID   clinicaltrials #> 62:                 RETIN A   clinicaltrials #> 63:                 RETIN-A   clinicaltrials #> 64:           RETINOIC ACID   clinicaltrials #> 65:                 ALTRENO   clinicaltrials #> 66:                  RENOVA           rxnorm #> 67:                   AVITA           rxnorm #> 68:   TRETINOIN MICROSPHERE           rxnorm #> 69:                 RETIN-A           rxnorm #> 70:               TRETINOIN           rxnorm #> 71:                 ACTICIN           rxnorm #> 72:                 ATRALIN           rxnorm #> 73:                 ALTRENO           rxnorm #> 74:                HY-14649   MedChemExpress #> 75:                PD001430 probes_and_drugs #>                  compoundID             Name #>                                                    NameLong sourceID #>                                                      <char>    <int> #>  1:                                                  ChEMBL        1 #>  2:                                                DrugBank        2 #>  3:                         PDBe (Protein Data Bank Europe)        3 #>  4:                                   Guide to Pharmacology        4 #>  5:                  PubChem ('Drugs of the Future' subset)        5 #>  6:   KEGG (Kyoto Encyclopedia of Genes and Genomes) Ligand        6 #>  7:       ChEBI (Chemical Entities of Biological Interest).        7 #>  8:                                 NIH Clinical Collection        8 #>  9:                                                    ZINC        9 #> 10:                                              eMolecules       10 #> 11:                                   Gene Expression Atlas       12 #> 12:                                   Gene Expression Atlas       12 #> 13:                                   Gene Expression Atlas       12 #> 14:                                   Gene Expression Atlas       12 #> 15:             FDA/USP Substance Registration System (SRS)       14 #> 16:                                              SureChEMBL       15 #> 17:                                              SureChEMBL       15 #> 18:                                                PharmGKB       17 #> 19:                        Human Metabolome Database (HMDB)       18 #> 20:                                                 Selleck       20 #> 21:                       PubChem ('Thomson Pharma' subset)       21 #> 22:                       PubChem ('Thomson Pharma' subset)       21 #> 23:                                       PubChem Compounds       22 #> 24:                                              NMRShiftDB       24 #> 25: Library of Integrated Network-based Cellular Signatures       25 #> 26:                                                   ACToR       26 #> 27:                                                   ACToR       26 #> 28:                                                   ACToR       26 #> 29:                                                 MolPort       28 #> 30:                                                 Nikkaji       29 #> 31:                                                 Nikkaji       29 #> 32:                                                 Nikkaji       29 #> 33:                                                 Nikkaji       29 #> 34:                                                 Nikkaji       29 #> 35:                                                 Nikkaji       29 #> 36:                                                 Nikkaji       29 #> 37:                                                 Nikkaji       29 #> 38:                                                 Nikkaji       29 #> 39:                                                 Nikkaji       29 #> 40:                                               BindingDB       31 #> 41:                                               BindingDB       31 #> 42: EPA (Environmental Protection Agency) CompTox Dashboard       32 #> 43:                                               LipidMaps       33 #> 44:                                             DrugCentral       34 #> 45:                                            Metabolights       36 #> 46:                                                  Brenda       37 #> 47:                                                  Brenda       37 #> 48:                                                  Brenda       37 #> 49:                                                  Brenda       37 #> 50:                                                  Brenda       37 #> 51:                                                  Brenda       37 #> 52:                                                  Brenda       37 #> 53:                                            ChemicalBook       39 #> 54:                                                DailyMed       45 #> 55:                                          clinicaltrials       46 #> 56:                                          clinicaltrials       46 #> 57:                                          clinicaltrials       46 #> 58:                                          clinicaltrials       46 #> 59:                                          clinicaltrials       46 #> 60:                                          clinicaltrials       46 #> 61:                                          clinicaltrials       46 #> 62:                                          clinicaltrials       46 #> 63:                                          clinicaltrials       46 #> 64:                                          clinicaltrials       46 #> 65:                                          clinicaltrials       46 #> 66:                                                  rxnorm       47 #> 67:                                                  rxnorm       47 #> 68:                                                  rxnorm       47 #> 69:                                                  rxnorm       47 #> 70:                                                  rxnorm       47 #> 71:                                                  rxnorm       47 #> 72:                                                  rxnorm       47 #> 73:                                                  rxnorm       47 #> 74:                                          MedChemExpress       48 #> 75:                                        Probes And Drugs       49 #>                                                    NameLong sourceID #>                                                                                                                           sourceURL #>                                                                                                                              <char> #>  1:                                                                        https://www.ebi.ac.uk/chembldb/compound/inspect/CHEMBL38 #>  2:                                                                                            http://www.drugbank.ca/drugs/DB00755 #>  3:                                                                http://www.ebi.ac.uk/pdbe-srv/pdbechem/chemicalCompound/show/REA #>  4:                                                      http://www.guidetopharmacology.org/GRAC/LigandDisplayForward?ligandId=2644 #>  5:                                                                              http://pubchem.ncbi.nlm.nih.gov/substance/12014646 #>  6:                                                                                  http://www.genome.jp/dbget-bin/www_bget?C00777 #>  7:                                                                    http://www.ebi.ac.uk/chebi/searchId.do?chebiId=CHEBI%3A15367 #>  8:                                                                                                                    SAM002264647 #>  9:                                                                           http://zinc15.docking.org/substances/ZINC000012358651 #> 10:                                                                             https://www.emolecules.com/cgi-bin/more?vid=1934590 #> 11:                                                                         http://www.ebi.ac.uk/gxa/query?conditionQuery=tretinoin #> 12:                                                                     http://www.ebi.ac.uk/gxa/query?conditionQuery=retinoic acid #> 13:                                                           http://www.ebi.ac.uk/gxa/query?conditionQuery=all-trans retinoic acid #> 14:                                                               http://www.ebi.ac.uk/gxa/query?conditionQuery=9-cis retinoic-acid #> 15:                                                                        https://precision.fda.gov/uniisearch/srs/unii/5688UTC01R #> 16:                                                                             https://www.surechembl.org/chemical/SCHEMBL19091395 #> 17:                                                                                 https://www.surechembl.org/chemical/SCHEMBL3145 #> 18:                                                                                       https://www.pharmgkb.org/drug/PA164746900 #> 19:                                                                                      http://www.hmdb.ca/metabolites/HMDB0001852 #> 20:                                                                     http://www.selleckchem.com/products/Tretinoin(Aberela).html #> 21:                                                                              http://pubchem.ncbi.nlm.nih.gov/substance/14849563 #> 22:                                                                              http://pubchem.ncbi.nlm.nih.gov/substance/14825303 #> 23:                                                                                 http://pubchem.ncbi.nlm.nih.gov/compound/444795 #> 24:                                                                                         http://nmrshiftdb.org/molecule/60021090 #> 25:                                                                            http://identifiers.org/lincs.smallmolecule/LSM-42854 #> 26:                                                                       http://actor.epa.gov/actor/chemical.xhtml?casrn=4759-48-2 #> 27:                                                                        http://actor.epa.gov/actor/chemical.xhtml?casrn=302-79-4 #> 28:                                                                     http://actor.epa.gov/actor/chemical.xhtml?casrn=187175-63-9 #> 29:                                                                  https://www.molport.com/shop/molecule-link/MolPort-000-883-857 #> 30:                                                                     http://jglobal.jst.go.jp/en/redirect?Nikkaji_No=J2.378.058E #> 31:                                                                     http://jglobal.jst.go.jp/en/redirect?Nikkaji_No=J1.313.469C #> 32:                                                                       http://jglobal.jst.go.jp/en/redirect?Nikkaji_No=J623.910B #> 33:                                                                       http://jglobal.jst.go.jp/en/redirect?Nikkaji_No=J970.183D #> 34:                                                                         http://jglobal.jst.go.jp/en/redirect?Nikkaji_No=J1.518K #> 35:                                                                       http://jglobal.jst.go.jp/en/redirect?Nikkaji_No=J494.243D #> 36:                                                                       http://jglobal.jst.go.jp/en/redirect?Nikkaji_No=J690.379G #> 37:                                                                       http://jglobal.jst.go.jp/en/redirect?Nikkaji_No=J646.157C #> 38:                                                                       http://jglobal.jst.go.jp/en/redirect?Nikkaji_No=J646.158A #> 39:                                                                       http://jglobal.jst.go.jp/en/redirect?Nikkaji_No=J528.606I #> 40:                                               http://www.bindingdb.org/bind/chemsearch/marvin/MolStructure.jsp?monomerid=323588 #> 41:                                                http://www.bindingdb.org/bind/chemsearch/marvin/MolStructure.jsp?monomerid=31883 #> 42:                                                                                 https://comptox.epa.gov/dashboard/DTXSID7021239 #> 43:                                                                  http://www.lipidmaps.org/data/LMSDRecord.php?LMID=LMPR01090019 #> 44:                                                                                            http://drugcentral.org/drugcard/2722 #> 45:                                                                                    http://www.ebi.ac.uk/metabolights/MTBLC15367 #> 46:                                                                 https://www.brenda-enzymes.org/ligand.php?brenda_ligand_id=6481 #> 47:                                                                https://www.brenda-enzymes.org/ligand.php?brenda_ligand_id=12679 #> 48:                                                                https://www.brenda-enzymes.org/ligand.php?brenda_ligand_id=21231 #> 49:                                                                 https://www.brenda-enzymes.org/ligand.php?brenda_ligand_id=2354 #> 50:                                                                 https://www.brenda-enzymes.org/ligand.php?brenda_ligand_id=5126 #> 51:                                                               https://www.brenda-enzymes.org/ligand.php?brenda_ligand_id=193381 #> 52:                                                               https://www.brenda-enzymes.org/ligand.php?brenda_ligand_id=260365 #> 53:                                                               https://www.chemicalbook.com/ChemicalProductProperty_EN_CB6222631 #> 54: https://dailymed.nlm.nih.gov/dailymed/search.cfm?adv=1&labeltype=human&query=ACTIVEMOIETY:(TRETINOIN)+OR+INGREDIENT:(TRETINOIN) #> 55:                                                                    https://www.clinicaltrials.gov/ct2/results?cond=&term=EUDYNA #> 56:                                                                 https://www.clinicaltrials.gov/ct2/results?cond=&term=TRETINOIN #> 57:                                                                    https://www.clinicaltrials.gov/ct2/results?cond=&term=ABEREL #> 58:                                                                    https://www.clinicaltrials.gov/ct2/results?cond=&term=RENOVA #> 59:                                                                     https://www.clinicaltrials.gov/ct2/results?cond=&term=AVITA #> 60:                                                                https://www.clinicaltrials.gov/ct2/results?cond=&term=NSC-122758 #> 61:                                                                  https://www.clinicaltrials.gov/ct2/results?cond=&term=VESANOID #> 62:                                                                   https://www.clinicaltrials.gov/ct2/results?cond=&term=RETIN A #> 63:                                                                   https://www.clinicaltrials.gov/ct2/results?cond=&term=RETIN-A #> 64:                                                             https://www.clinicaltrials.gov/ct2/results?cond=&term=RETINOIC ACID #> 65:                                                                   https://www.clinicaltrials.gov/ct2/results?cond=&term=ALTRENO #> 66:                                                           https://mor.nlm.nih.gov/RxNav/search?searchBy=RXCUI&searchTerm=846950 #> 67:                                                           https://mor.nlm.nih.gov/RxNav/search?searchBy=RXCUI&searchTerm=215492 #> 68:                                                           https://mor.nlm.nih.gov/RxNav/search?searchBy=RXCUI&searchTerm=221175 #> 69:                                                           https://mor.nlm.nih.gov/RxNav/search?searchBy=RXCUI&searchTerm=153101 #> 70:                                                            https://mor.nlm.nih.gov/RxNav/search?searchBy=RXCUI&searchTerm=10753 #> 71:                                                           https://mor.nlm.nih.gov/RxNav/search?searchBy=RXCUI&searchTerm=214998 #> 72:                                                           https://mor.nlm.nih.gov/RxNav/search?searchBy=RXCUI&searchTerm=728470 #> 73:                                                          https://mor.nlm.nih.gov/RxNav/search?searchBy=RXCUI&searchTerm=2055004 #> 74:                                                                                         https://www.medchemexpress.com/HY-14649 #> 75:                                                                                  https://www.probes-drugs.org/compound/PD001430 #>                                                                                                                           sourceURL #>  #> $UniChem_Mappings #> $UniChem_Mappings$UniChem.UCI #> [1] 538323 #>  #> $UniChem_Mappings$UniChem.InchiKey #> [1] \"SHGAZHPCJJPHSC-YCNIQYBTSA-N\" #>  #> $UniChem_Mappings$UniChem.Inchi #> [1] \"InChI=1S/C20H28O2/c1-15(8-6-9-16(2)14-19(21)22)11-12-18-17(3)10-7-13-20(18,4)5/h6,8-9,11-12,14H,7,10,13H2,1-5H3,(H,21,22)/b9-6+,12-11+,15-8+,16-14+\" #>  #> $UniChem_Mappings$UniChem.formula #> [1] \"C20H28O2\" #>  #> $UniChem_Mappings$UniChem.connections #> [1] \"1-15(8-6-9-16(2)14-19(21)22)11-12-18-17(3)10-7-13-20(18,4)5\" #>  #> $UniChem_Mappings$UniChem.hAtoms #> [1] \"6,8-9,11-12,14H,7,10,13H2,1-5H3,(H,21,22)\" #>  #>"},{"path":"https://bhklab.github.io/AnnotationGx/reference/standardize_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Standardize Names — standardize_names","title":"Standardize Names — standardize_names","text":"function takes character vector standardizes names converting lowercase, removing trailing information comma, removing information within square brackets parentheses, removing non-alphanumeric characters, replacing empty names \"invalid\", converting names uppercase.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/standardize_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standardize Names — standardize_names","text":"","code":"standardize_names(object)"},{"path":"https://bhklab.github.io/AnnotationGx/reference/standardize_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standardize Names — standardize_names","text":"object character vector containing names standardized.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/standardize_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standardize Names — standardize_names","text":"character vector standardized names.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/standardize_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Standardize Names — standardize_names","text":"","code":"standardize_names(c(\"John Doe\", \"Jane Smith (Manager)\", \"Alice, PhD\")) #> [1] \"JOHNDOE\"   \"JANESMITH\" \"ALICE\"     # Output: [1] \"JOHNDOE\" \"JANESMITH\" \"ALICE\""},{"path":"https://bhklab.github.io/AnnotationGx/reference/strSplit.html","id":null,"dir":"Reference","previous_headings":"","what":"Split a character vector into a matrix based on a delimiter — strSplit","title":"Split a character vector into a matrix based on a delimiter — strSplit","text":"function splits character vector matrix based specified delimiter. can handle finite infinite splits.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/strSplit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split a character vector into a matrix based on a delimiter — strSplit","text":"","code":"strSplit(x, split, fixed = TRUE, n = Inf)"},{"path":"https://bhklab.github.io/AnnotationGx/reference/strSplit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split a character vector into a matrix based on a delimiter — strSplit","text":"x character vector split split character string specifying delimiter fixed logical value indicating whether delimiter treated fixed string n integer specifying maximum number splits performed","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/strSplit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split a character vector into a matrix based on a delimiter — strSplit","text":"matrix row represents split element","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/strSplit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split a character vector into a matrix based on a delimiter — strSplit","text":"","code":"strSplit(\"Hello,World\", \",\") #>      [,1]    [,2]    #> [1,] \"Hello\" \"World\" # Output: #      [,1]    [,2]    # [1,] \"Hello\" \"World\""},{"path":"https://bhklab.github.io/AnnotationGx/reference/unlistNested.html","id":null,"dir":"Reference","previous_headings":"","what":"Unlists a nested list and removes NA values and duplicates. — unlistNested","title":"Unlists a nested list and removes NA values and duplicates. — unlistNested","text":"function takes nested list input unlists recursively. removes NA values duplicates resulting vector.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/unlistNested.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unlists a nested list and removes NA values and duplicates. — unlistNested","text":"","code":"unlistNested(element)"},{"path":"https://bhklab.github.io/AnnotationGx/reference/unlistNested.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unlists a nested list and removes NA values and duplicates. — unlistNested","text":"element nested list unlisted.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/unlistNested.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unlists a nested list and removes NA values and duplicates. — unlistNested","text":"vector NA values duplicates removed.","code":""},{"path":"https://bhklab.github.io/AnnotationGx/reference/unlistNested.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Unlists a nested list and removes NA values and duplicates. — unlistNested","text":"","code":"nested_list <- list(a = list(1, 2, NA), b = list(3, 4, 5)) unlistNested(nested_list) #> [1] 1 2 3 4 5 # Output: [1] 1 2 3 4 5"},{"path":"https://bhklab.github.io/AnnotationGx/news/index.html","id":"annotationgx-development-version","dir":"Changelog","previous_headings":"","what":"AnnotationGx (development version)","title":"AnnotationGx (development version)","text":"Initial CRAN submission.","code":""}]
