% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getUniChem.R
\name{postRequestUniChem}
\alias{postRequestUniChem}
\title{Make POST requests to UniChem 2.0 compounds or connectivity endpoint}
\usage{
postRequestUniChem(
  compound,
  type = c("sourceID", "uci", "inchi", "inchikey"),
  sourceID = "pubchem",
  ...,
  connectivity = FALSE
)
}
\arguments{
\item{compound}{\code{character(1)} Machine readable compound identifier to the
specified \code{type}. When \code{type=="sourceID"} the compound must be a valid
identifer from the from specified \code{sourceID} database.}

\item{type}{\code{character(1)} The kind of compound representation for the
molecule to search. Options are "uci" for UniChem ID, "inchi" for InChI,
"inchikey" for InChIKey or "sourceID" mapping between databases. Default
is "sourceID".}

\item{sourceID}{\code{numeric(1)} or \code{character(1)} Either a UniChem source
database integer id or the name of a database to look up the key for.
This should match "sourceID" from \code{getUniChemCompound()} when sourceID is
numeric or "name" when it is character. Default source ID is "pubchem",
accepting valid PubChem compound IDs.}

\item{...}{\code{pairlist} Fall through parameters to \code{httr::POST} via
\code{httr:RETRY}. Pass \code{httr::verbose()} to see full details of the query being
constructed.}

\item{connectivity}{\code{logical(1)} Should the connectivity API be queried
instead? This will treat your compound as a mixture and return sub-components,
isotopes or other slight variations on the query molecule.
Default is \code{FALSE}, which only matches exactly. Note that less detailed
structural information is returned when \code{connectivity=TRUE}.}
}
\value{
A \code{data.table} of database specific compound identifiers for the
queried \code{compound}. Also attaches the query parameters ("query") and
detailed InChI strutural information ("inchi") in the table attributes.
See \code{attributes()} of the returned object for this information.
}
\description{
Retrieve database specific identifiers from all the databases available in
UniChem based on some query compound. These identifiers can then be used
to reliably look up the compound in any of the included databases.
}
\details{
For cases where sourceID is character but is not in the "name" column of
the source database table then we try to coerce to integer under the
assumption that you accidentally specified the sourceID as a string.

When \code{type="uci"}, \code{compound} is automatically coerced to character.

When \code{connectivity=TRUE} the connectivity end-point is queried for similar
compounds. The returned table in this case will have a list column which
indicates which criteria were met for the match.

Full documentation:
https://chembl.gitbook.io/unichem/unichem-2.0/unichem-2.0-beta/api/compound-search
https://chembl.gitbook.io/unichem/unichem-2.0/unichem-2.0-beta/api/connectivity-search
}
\examples{
\dontrun{
# Look up for Erlotinib via DrugBank ID
erl_drugbank <- postRequestUniChem(compound="DB00530", type="sourceID", sourceID="drugbank")
# Now do backwards look ups with the results
erl_uci <- postRequestUniChem(compound=unique(erl_drugbank$uci), type="uci")
erl_ichikey <- postRequestUniChem(compound=unique(erl_drugbank$inchikey), type="inchikey")
}

}
\author{
Christopher Eeles (christopher.eeles@uhnresearch.ca)
}
